{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common-input/common-input.component.html","webpack:///./src/app/common-input/common-input.component.ts","webpack:///./src/app/common-input/config.ts","webpack:///./src/app/common-input/form-container.module.ts","webpack:///./src/app/common-input/input-type-autocomplete/input-type-autocomplete.component.html","webpack:///./src/app/common-input/input-type-autocomplete/input-type-autocomplete.component.ts","webpack:///./src/app/common-input/input-type-checkbox/input-type-checkbox.component.html","webpack:///./src/app/common-input/input-type-checkbox/input-type-checkbox.component.ts","webpack:///./src/app/common-input/input-type-date/input-type-date.component.html","webpack:///./src/app/common-input/input-type-date/input-type-date.component.ts","webpack:///./src/app/common-input/input-type-number/input-type-number.component.html","webpack:///./src/app/common-input/input-type-number/input-type-number.component.ts","webpack:///./src/app/common-input/input-type-select/input-type-select.component.html","webpack:///./src/app/common-input/input-type-select/input-type-select.component.ts","webpack:///./src/app/common-input/input-type-text/input-type-text.component.html","webpack:///./src/app/common-input/input-type-text/input-type-text.component.ts","webpack:///./src/app/common-input/input-type-textarea/input-type-textarea.component.html","webpack:///./src/app/common-input/input-type-textarea/input-type-textarea.component.ts","webpack:///./src/app/common-input/input-type.interface.ts","webpack:///./src/app/common-input/locales/vn-vi.ts","webpack:///./src/app/common-input/message.validation.ts","webpack:///./src/app/core/interfaces/app/form-mode.ts","webpack:///./src/app/custom-event-manager.ts","webpack:///./src/app/examples/sheet-example/sheet-example.component.html","webpack:///./src/app/examples/sheet-example/sheet-example.component.ts","webpack:///./src/app/examples/simple-table-example/simple-table-example.component.html","webpack:///./src/app/examples/simple-table-example/simple-table-example.component.ts","webpack:///./src/app/paginator/pageable.component.ts.PageableComponent.html","webpack:///./src/app/paginator/pageable.component.ts","webpack:///./src/app/paginator/pagination.service.ts","webpack:///./src/app/paginator/paginator.module.ts","webpack:///./src/app/paginator/prepend-zero.pipe.ts","webpack:///./src/app/paginator/table-metadata.component.html","webpack:///./src/app/paginator/table-metadata.component.ts","webpack:///./src/app/paginator/table-paginator.component.html","webpack:///./src/app/paginator/table-paginator.component.ts","webpack:///./src/app/table/core/adding-row/adding-row.component.html","webpack:///./src/app/table/core/adding-row/adding-row.component.ts","webpack:///./src/app/table/core/cells/data-only-cell/data-only-cell.component.html","webpack:///./src/app/table/core/cells/data-only-cell/data-only-cell.component.ts","webpack:///./src/app/table/core/data/row-grouping.utils.ts","webpack:///./src/app/table/core/data/table-data-internal.ts","webpack:///./src/app/table/core/data/table-data.service.ts","webpack:///./src/app/table/core/data/table-data.utils.ts","webpack:///./src/app/table/core/default-configs.ts","webpack:///./src/app/table/core/formula/formula-parser.ts","webpack:///./src/app/table/core/ng-table-state.service.ts","webpack:///./src/app/table/core/pipes/date-pipes.ts","webpack:///./src/app/table/core/pipes/prepend-zero.pipe.ts","webpack:///./src/app/table/core/pipes/vnd-currency.pipe.ts","webpack:///./src/app/table/core/table-actions.ts","webpack:///./src/app/table/core/table-cell-for-adding/adding-cell.service.ts","webpack:///./src/app/table/core/table-cell-for-adding/adding-data.service.ts","webpack:///./src/app/table/core/table-cell-for-adding/table-cell-for-adding.component.html","webpack:///./src/app/table/core/table-cell-for-adding/table-cell-for-adding.component.ts","webpack:///./src/app/table/core/table-cell/cell-manager.service.ts","webpack:///./src/app/table/core/table-cell/cell-manager.utils.ts","webpack:///./src/app/table/core/table-cell/cell.service.ts","webpack:///./src/app/table/core/table-cell/table-cell.component.html","webpack:///./src/app/table/core/table-cell/table-cell.component.ts","webpack:///./src/app/table/core/table-configurations.ts","webpack:///./src/app/table/core/table-data.ts","webpack:///./src/app/table/core/table-group-header/table-group-header.component.html","webpack:///./src/app/table/core/table-group-header/table-group-header.component.ts","webpack:///./src/app/table/core/table-header/table-header.component.html","webpack:///./src/app/table/core/table-header/table-header.component.ts","webpack:///./src/app/table/core/table-row/table-row.component.html","webpack:///./src/app/table/core/table-row/table-row.component.ts","webpack:///./src/app/table/core/table.utils.ts","webpack:///./src/app/table/index.ts","webpack:///./src/app/table/ng-table.component.html","webpack:///./src/app/table/ng-table.component.ts","webpack:///./src/app/table/ng-table.module.ts","webpack:///./src/app/table/public-api.ts","webpack:///./src/app/table/stop-propagation.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SimpleTableExampleComponent } from './examples/simple-table-example/simple-table-example.component';\r\nimport { SheetExampleComponent } from './examples/sheet-example/sheet-example.component';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot([\r\n    {\r\n      path: '',\r\n      children: [\r\n        {\r\n          path: 'sheet',\r\n          component: SheetExampleComponent\r\n        },\r\n        {\r\n          path: 'simple',\r\n          component: SimpleTableExampleComponent,\r\n        }\r\n      ]\r\n    }\r\n  ])],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","<ul>\r\n  <li>\r\n    <a routerLink=\"sheet\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"true\">Sheet</a>\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"simple\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"true\">Simple</a>\r\n  </li>\r\n</ul>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","import { BrowserModule, EventManager } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SheetExampleComponent } from './examples/sheet-example/sheet-example.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormContainerModule } from './common-input/form-container.module';\r\nimport { NgTableModule } from './table';\r\nimport { CustomEventManager } from './custom-event-manager';\r\nimport { SimpleTableExampleComponent } from './examples/simple-table-example/simple-table-example.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SheetExampleComponent,\r\n    SimpleTableExampleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormContainerModule,\r\n    NgTableModule,\r\n  ],\r\n  providers: [\r\n    { provide: EventManager, useClass: CustomEventManager }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div [attr.type]=\"type\" class=\"mb-2 {{ !label ? '' : 'row' }}\">\r\n    <label *ngIf=\"label\" class=\"{{labelClass}} pr-0\">{{ label }}\r\n        <span *ngIf=\"label && checkRequired()\" class=\"text-danger\">(*)</span>\r\n    </label>\r\n    <div class=\"{{contentClass}}\" [ngClass]=\"{ 'disable-click': readOnly }\">\r\n        <template #inputElement></template>\r\n        <p class=\"text-danger mb-1\" *ngIf=\"checkError()\">\r\n            {{ errorMsg }}</p>\r\n    </div>\r\n    <ng-content></ng-content>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { AbstractControl, ControlContainer, ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { InputTypeBase } from './input-type.interface';\r\nimport { MESSAGE_VALIDATION, MESSAGE_VALIDATION_RULE } from './message.validation';\r\nimport { Subject } from 'rxjs';\r\nimport { getComponentFromType } from './config';\r\nimport { takeUntil, debounceTime } from 'rxjs/operators';\r\nimport { untilDestroyed } from 'ngx-take-until-destroy';\r\n\r\n@Component({\r\n  selector: 'common-input',\r\n  templateUrl: './common-input.component.html',\r\n  styleUrls: ['./common-input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => CommonInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CommonInputComponent implements OnInit, ControlValueAccessor, AfterViewInit, OnDestroy {\r\n\r\n  // only have one type\r\n  @ViewChild('inputElement', { read: ViewContainerRef }) entry: ViewContainerRef;\r\n  @Input() @HostBinding('attr.type') type: any = 'text';\r\n\r\n  @Input() formControl: AbstractControl;\r\n  @Input() formControlName: string;\r\n\r\n  @Input() label: string;\r\n  @Input() labelClass = '';\r\n  @Input() contentClass = '';\r\n\r\n  @Input() typeahead = new Subject<string>();\r\n  @Input() options: any;\r\n\r\n  @Input() errorMessages: any;\r\n\r\n  @Input()\r\n  get data() {\r\n    return this._data;\r\n  }\r\n  set data(data: any) {\r\n    this._data = data;\r\n    this.initDataForChild(data);\r\n  }\r\n\r\n  @Input()\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(val: any) {\r\n    this._value = val;\r\n    this.setComponentData('target', this._value);\r\n  }\r\n\r\n  @Input()\r\n  get readOnly (): boolean {\r\n    return this._readOnly;\r\n  }\r\n\r\n  set readOnly (value: boolean) {\r\n    this._readOnly = !!value;\r\n    this.setComponentData('readOnly', this._readOnly);\r\n  }\r\n\r\n  @Input()\r\n  get placeholder (): string {\r\n    return this._placeholder;\r\n  }\r\n\r\n  set placeholder (value: string) {\r\n    this._placeholder = value || '';\r\n    this.setComponentData('placeholder', this._placeholder);\r\n  }\r\n\r\n  @Input()\r\n  get row (): number {\r\n    return this._row;\r\n  }\r\n\r\n  set row (value: number) {\r\n    this._row = value;\r\n    this.setComponentData('row', this._row);\r\n  }\r\n\r\n  errorMsg = '';\r\n\r\n  _onChange: any;\r\n  _onTouched: any;\r\n\r\n  private _value;\r\n  private _readOnly = false;\r\n  private _data: any = {};\r\n  private _placeholder = '';\r\n  private _row = 5;\r\n\r\n  private componentRef: ComponentRef<any>;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _renderer: Renderer2,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() private controlContainer: ControlContainer,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.controlContainer && this.formControlName) {\r\n      this.formControl = this.controlContainer.control.get(this.formControlName);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.createInputComponent(this.entry);\r\n    if (this.formControl) {\r\n      this.formControl.valueChanges.pipe(debounceTime(1000), untilDestroyed(this)).subscribe(val => {\r\n        if (val && (typeof val != 'number') && !(val instanceof Date)) {\r\n          this.formControl.setValue(val.trim(), { emitEvent: false });\r\n        }\r\n      });\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.entry) {\r\n      this.entry.clear();\r\n    }\r\n    this.componentRef.destroy();\r\n  }\r\n\r\n  @HostListener('change')\r\n  change($event) {\r\n    if ($event && $event.target) {\r\n      this._onChange($event.target.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur')\r\n  blur() {\r\n    this._onTouched();\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the model changes.\r\n  registerOnChange(fn: any): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  // Allows Angular to register a function to call when the input has been touched.\r\n  registerOnTouched(fn: any): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Allows Angular to disable the input.\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  createInputComponent(entry) {\r\n    entry.clear();\r\n    const component = getComponentFromType(this.type);\r\n\r\n    if (!component) {\r\n      alert('error');\r\n    }\r\n    const factory = this.resolver.resolveComponentFactory(component);\r\n    this.componentRef = entry.createComponent(factory);\r\n    (<InputTypeBase<any>>this.componentRef.instance).formControlInput = this.formControl;\r\n    this.initDataForChild(this.data);\r\n  }\r\n\r\n  initDataForChild(data: any) {\r\n    if (this.componentRef && data) {\r\n      data.placeholder = this.placeholder;\r\n      data.value = this.value;\r\n      data.readOnly = this.readOnly;\r\n      data.typeahead = this.typeahead;\r\n      data.row = this.row;\r\n      (<InputTypeBase<any>>this.componentRef.instance).data = data;\r\n    }\r\n  }\r\n\r\n  checkRequired() {\r\n    if (!this.formControl) {\r\n      return false;\r\n    }\r\n    const abstractControl = this.formControl;\r\n    if (abstractControl.validator) {\r\n      const validator = abstractControl.validator({} as AbstractControl);\r\n      if (validator && validator.required) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkError() {\r\n    if (!this.formControl) {\r\n      return false;\r\n    }\r\n    const control = this.formControl;\r\n    if (control.errors && (control.touched || control.dirty)) {\r\n      // set active error\r\n      this.errorMsg = this.getErrorMsg(control.errors);\r\n\r\n      return true;\r\n    }\r\n\r\n    this.errorMsg = '';\r\n    return false;\r\n  }\r\n\r\n  getErrorMsg(errors) {\r\n    if (!this.formControl) {\r\n      return false;\r\n    }\r\n    let rule;\r\n    let msg = '';\r\n    let nameControl = this.getNameControl();\r\n\r\n    for (const key in errors) {\r\n      if (errors[key]) {\r\n        rule = key;\r\n        break;\r\n      }\r\n    }\r\n    // console.log(nameControl);\r\n\r\n    if (this.errorMessages && this.errorMessages[rule]) {\r\n      return this.errorMessages[rule];\r\n    }\r\n\r\n    if (this.errorMessages && this.errorMessages[nameControl] && this.errorMessages[nameControl][rule]) {\r\n      return this.errorMessages[nameControl][rule];\r\n    }\r\n\r\n    if (MESSAGE_VALIDATION[nameControl] && MESSAGE_VALIDATION[nameControl][rule]) {\r\n      return MESSAGE_VALIDATION[nameControl][rule];\r\n    }\r\n\r\n    // by rule\r\n    if (MESSAGE_VALIDATION_RULE[rule]) {\r\n      return MESSAGE_VALIDATION_RULE[rule];\r\n    }\r\n    return 'chưa định nghĩa msg: ' + nameControl + '|' + rule;\r\n  }\r\n\r\n  getNameControl() {\r\n    if (this.formControlName) {\r\n      return this.formControlName;\r\n    }\r\n    let controlName = null;\r\n    let parent = this.formControl.parent;\r\n    // only such parent, which is FormGroup, has a dictionary\r\n    // with control-names as a key and a form-control as a value\r\n    if (parent instanceof FormGroup) {\r\n      for (const key of Object.keys(parent.controls)) {\r\n        if (this.formControl === parent.controls[key]) {\r\n          // both are same: control passed to Validator\r\n          //  and this child - are the same references\r\n          controlName = key;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // we either found a name or simply return null\r\n    return controlName;\r\n  }\r\n\r\n  private setComponentData(target, value) {\r\n    if (this.componentRef) {\r\n      const newData = { ...this.componentRef.instance.data };\r\n      newData[target] = value;\r\n      this.componentRef.instance.data = newData;\r\n    }\r\n  }\r\n\r\n}\r\n","import { InputTypeSelectComponent } from './input-type-select/input-type-select.component';\r\nimport { InputTypeTextComponent } from './input-type-text/input-type-text.component';\r\nimport { InputTypeDateComponent } from './input-type-date/input-type-date.component';\r\nimport { InputTypeAutocompleteComponent } from './input-type-autocomplete/input-type-autocomplete.component';\r\nimport { InputTypeTextareaComponent } from './input-type-textarea/input-type-textarea.component';\r\nimport { InputTypeNumberComponent } from './input-type-number/input-type-number.component';\r\nimport { InputTypeCheckboxComponent } from './input-type-checkbox/input-type-checkbox.component';\r\nimport { Type } from '@angular/core';\r\n\r\nexport function getComponentFromType (type: string): Type<any> {\r\n  let component;\r\n  switch (type) {\r\n    case 'select':\r\n      component = InputTypeSelectComponent;\r\n      break;\r\n    case 'date':\r\n      component = InputTypeDateComponent;\r\n      break;\r\n    case 'autocomplete':\r\n      component = InputTypeAutocompleteComponent;\r\n      break;\r\n    case 'textarea':\r\n      component = InputTypeTextareaComponent;\r\n      break;\r\n    case 'currency':\r\n    case 'number':\r\n      component = InputTypeNumberComponent;\r\n      break;\r\n    case 'checkbox':\r\n      component = InputTypeCheckboxComponent;\r\n      break;\r\n    default:\r\n      component = InputTypeTextComponent;\r\n      break;\r\n  }\r\n\r\n  return component;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { InputTypeTextComponent } from './input-type-text/input-type-text.component';\r\nimport { InputTypeSelectComponent } from './input-type-select/input-type-select.component';\r\nimport { CommonInputComponent } from './common-input.component';\r\nimport { InputTypeDateComponent } from './input-type-date/input-type-date.component';\r\nimport { InputTypeAutocompleteComponent } from './input-type-autocomplete/input-type-autocomplete.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { InputTypeTextareaComponent } from './input-type-textarea/input-type-textarea.component';\r\nimport { BsDatepickerModule, BsLocaleService } from 'ngx-bootstrap';\r\nimport { InputTypeNumberComponent } from './input-type-number/input-type-number.component';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { vnViLocale } from './locales/vn-vi';\r\nimport { RequireInputFileComponent } from './require-input-file/require-input-file.component';\r\nimport { InputTypeCheckboxComponent } from './input-type-checkbox/input-type-checkbox.component';\r\ndefineLocale('vi', vnViLocale);\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        BsDatepickerModule.forRoot()\r\n    ],\r\n    exports: [\r\n        ReactiveFormsModule,\r\n        CommonInputComponent,\r\n        RequireInputFileComponent\r\n    ],\r\n    declarations: [\r\n        CommonInputComponent,\r\n        InputTypeTextComponent,\r\n        InputTypeSelectComponent,\r\n        InputTypeDateComponent,\r\n        InputTypeAutocompleteComponent,\r\n        InputTypeTextareaComponent,\r\n        InputTypeNumberComponent,\r\n        RequireInputFileComponent,\r\n        InputTypeCheckboxComponent\r\n    ],\r\n    entryComponents: [\r\n        InputTypeTextComponent,\r\n        InputTypeSelectComponent,\r\n        InputTypeDateComponent,\r\n        InputTypeAutocompleteComponent,\r\n        InputTypeTextareaComponent,\r\n        InputTypeNumberComponent,\r\n        InputTypeCheckboxComponent\r\n    ],\r\n})\r\nexport class FormContainerModule {\r\n\r\n  constructor (localService: BsLocaleService) {\r\n      localService.use('vi');\r\n  }\r\n\r\n}\r\n","<ng-select [items]=\"options\"\r\n        [selectOnTab]=\"true\"\r\n        [groupBy]=\"groupBy\"\r\n        [bindValue]=\"bindValue\"\r\n        [bindLabel]=\"bindLabel\"\r\n        [multiple]=\"multiple\"\r\n        [formControl]=\"formControlInput\"\r\n        [typeahead]=\"typeahead\"\r\n        [placeholder]=\"formControlInput.value ? '' : placeholder\">\r\n</ng-select>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ga-input-type-autocomplete',\r\n  templateUrl: './input-type-autocomplete.component.html',\r\n  styleUrls: ['./input-type-autocomplete.component.scss']\r\n})\r\nexport class InputTypeAutocompleteComponent implements OnInit {\r\n  groupBy = '';\r\n  multiple: boolean;\r\n  placeholder: any = '';\r\n  defaultPlaceholder = 'Lựa chọn';\r\n  options: Array<any> = [];\r\n  bindValue = 'id';\r\n  bindLabel = 'value';\r\n  readOnly = false;\r\n\r\n  typeahead = new Subject<string>();\r\n  _formControlInput: FormControl = new FormControl();\r\n  api: any;// suport api search\r\n\r\n  set formControlInput(control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput() {\r\n    return this._formControlInput;\r\n  }\r\n\r\n  _data = {};\r\n\r\n  get data () {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data: any) {\r\n    this._data = data;\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    this.placeholder = data.placeholder ? data.placeholder : this.defaultPlaceholder;\r\n\r\n    if (data.typeahead) {\r\n      this.typeahead = data.typeahead;\r\n    }\r\n\r\n    if (data.bindValue) {\r\n      this.bindValue = data.bindValue;\r\n    }\r\n\r\n    if (data.bindLabel) {\r\n      this.bindLabel = data.bindLabel;\r\n    }\r\n\r\n    if (data.options) {\r\n      this.options = data.options;\r\n    }\r\n    if (data.multiple) {\r\n      this.multiple = data.multiple;\r\n    }\r\n    if (data.groupBy) {\r\n      this.groupBy = data.groupBy;\r\n    }\r\n    if (data.api) {\r\n      this.api = data.api;\r\n    }\r\n\r\n    if (data.readOnly) {\r\n      this.readOnly = data.readOnly;\r\n    }\r\n\r\n  }\r\n\r\n  constructor(private config: NgSelectConfig) {\r\n    this.config.notFoundText = 'Custom not found';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.formControlInput.valueChanges.subscribe(rs => console.log(rs));\r\n    if (this.api) {\r\n      this.typeahead.pipe(\r\n        debounceTime(200),\r\n        switchMap(keyword => this.api(keyword))\r\n      ).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.options = res;\r\n      });\r\n      this.typeahead.next(' ');\r\n    }\r\n  }\r\n\r\n}\r\n","<label>\r\n  <input type=\"checkbox\" [formControl]=\"formControlInput\" />\r\n  <span class=\"custom-control-indicator\"></span>\r\n  <span class=\"custom-control-description\">{{ data.text }}</span>\r\n</label>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InputTypeBase, IDataCheckbox } from '../input-type.interface';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ga-input-type-checkbox',\r\n  templateUrl: './input-type-checkbox.component.html',\r\n  styleUrls: ['./input-type-checkbox.component.scss']\r\n})\r\nexport class InputTypeCheckboxComponent extends InputTypeBase<IDataCheckbox> implements OnInit {\r\n\r\n  _formControlInput: FormControl = new FormControl();\r\n  set formControlInput(control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput() {\r\n    return this._formControlInput;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    // throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n}\r\n","<div class=\"input-group date\">\r\n  <input type=\"text\" class=\"form-control\"\r\n         #dp=\"bsDatepicker\"\r\n         bsDatepicker\r\n         placeholder=\"{{ datePickerFormat }}\"\r\n         [formControl]=\"formControlInput\"\r\n         [bsConfig]=\"datePickerConfig\"\r\n         [readonly]=\"readOnly\">\r\n  <div class=\"input-group-append\">\r\n    <span class=\"input-group-text\" (click)=\"dp.toggle()\" [attr.aria-expanded]=\"dp.isOpen\"><i class=\"la la-calendar\"></i></span>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport const DATE_FORMAT = 'DD/MM/YYYY';\r\n\r\n@Component({\r\n  selector: 'ga-input-type-date',\r\n  templateUrl: './input-type-date.component.html',\r\n  styleUrls: ['./input-type-date.component.scss']\r\n})\r\nexport class InputTypeDateComponent implements OnInit {\r\n  placeholder: any = '';\r\n  readOnly: boolean;\r\n  _formControlInput: FormControl = new FormControl();\r\n\r\n  datePickerFormat = DATE_FORMAT.toLowerCase();\r\n  datePickerConfig = {\r\n    dateInputFormat: DATE_FORMAT\r\n  };\r\n\r\n  set formControlInput (control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput () {\r\n    return this._formControlInput;\r\n  }\r\n\r\n  _data = {};\r\n\r\n  get data () {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data: any) {\r\n    this._data = data;\r\n    if (!data) {\r\n        return;\r\n    }\r\n    if (data.placeholder) {\r\n        this.placeholder = data.placeholder;\r\n    }\r\n    if (data.readOnly) {\r\n        this.readOnly = data.readOnly;\r\n    }\r\n}\r\n\r\n  ngOnInit () {\r\n  }\r\n}\r\n","<input class=\"form-control\"\r\n       type=\"number\"\r\n       [placeholder]=\"formControlInput.value ? '' : placeholder\"\r\n       [formControl]=\"formControlInput\">\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ga-input-type-number',\r\n  templateUrl: './input-type-number.component.html',\r\n  styleUrls: ['./input-type-number.component.scss']\r\n})\r\nexport class InputTypeNumberComponent implements OnInit {\r\n\r\n    readOnly: boolean;\r\n    placeholder: any = '';\r\n    _formControlInput: FormControl = new FormControl();\r\n    set formControlInput(control: FormControl) {\r\n        if (control) {\r\n            this._formControlInput = control;\r\n        }\r\n    }\r\n\r\n    get formControlInput() {\r\n        return this._formControlInput;\r\n    }\r\n\r\n    _data = {};\r\n\r\n    get data () {\r\n      return this._data;\r\n    }\r\n\r\n    set data(data: any) {\r\n        this._data = data;\r\n\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.placeholder) {\r\n            this.placeholder = data.placeholder;\r\n        }\r\n        if (data.readOnly) {\r\n            this.readOnly = data.readOnly;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<select class=\"form-control\" [formControl]=\"formControlInput\">\r\n  <option *ngFor=\"let option of options\" [value]=\"option.id\">\r\n    {{option.value}}\r\n  </option>\r\n</select>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'input-type-select',\r\n  templateUrl: './input-type-select.component.html',\r\n  styleUrls: ['./input-type-select.component.scss']\r\n})\r\nexport class InputTypeSelectComponent implements OnInit {\r\n  placeholder: any = '';\r\n  _formControlInput: FormControl = new FormControl();\r\n  options: Array<any> = [];\r\n  set formControlInput(control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput() {\r\n    return this._formControlInput;\r\n  }\r\n\r\n  _data = {};\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data: any) {\r\n    this._data = data;\r\n    if (!data) {\r\n      return;\r\n    }\r\n    if (data.placeholder) {\r\n      this.placeholder = data.placeholder;\r\n    }\r\n    if (data.options) {\r\n      this.options = data.options;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<input class=\"form-control\"\r\n       type=\"text\"\r\n       [value]=\"value || formControlInput.value\"\r\n       [readonly]=\"readOnly\"\r\n       [placeholder]=\"formControlInput.value ? '' : placeholder\"\r\n       [formControl]=\"formControlInput\">","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { InputTypeBase, IDataText } from '../input-type.interface';\r\n@Component({\r\n  selector: 'input-type-text',\r\n  templateUrl: './input-type-text.component.html',\r\n  styleUrls: ['./input-type-text.component.scss']\r\n})\r\nexport class InputTypeTextComponent extends InputTypeBase<IDataText> implements OnInit {\r\n  readOnly: boolean;\r\n  placeholder: any = '';\r\n  value = '';\r\n  _formControlInput: FormControl = new FormControl();\r\n\r\n  set formControlInput(control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput() {\r\n    return this._formControlInput;\r\n  }\r\n\r\n  _data: any = {};\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data) {\r\n    this._data = data;\r\n\r\n    if (!data) {\r\n      return;\r\n    }\r\n    if (data.placeholder) {\r\n      this.placeholder = data.placeholder;\r\n    }\r\n    if (data.value) {\r\n      this.value = data.value;\r\n    }\r\n    if (data.readOnly) {\r\n      this.readOnly = data.readOnly;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<textarea class=\"form-control\" [readonly]=\"readOnly\" [rows]=\"row\" [formControl]=\"formControlInput\" [placeholder]=\"placeholder\"></textarea>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ga-input-type-textarea',\r\n  templateUrl: './input-type-textarea.component.html',\r\n  styleUrls: ['./input-type-textarea.component.scss']\r\n})\r\nexport class InputTypeTextareaComponent implements OnInit {\r\n  readOnly: boolean;\r\n  placeholder = '';\r\n  row: number;\r\n  _formControlInput: FormControl = new FormControl();\r\n  set formControlInput(control: FormControl) {\r\n    if (control) {\r\n      this._formControlInput = control;\r\n    }\r\n  }\r\n\r\n  get formControlInput() {\r\n    return this._formControlInput;\r\n  }\r\n\r\n  _data = {};\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data: any) {\r\n    this._data = data;\r\n    if (!data) {\r\n      return;\r\n    }\r\n    if (data.placeholder) {\r\n      this.placeholder = data.placeholder;\r\n    }\r\n    if (data.row) {\r\n      this.row = data.row;\r\n    }\r\n    if (data.readOnly) {\r\n      this.readOnly = data.readOnly;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport abstract class InputTypeBase<T> {\r\n  formControlInput: AbstractControl;\r\n  _data: any = {};\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(data: T) {\r\n    for (let key of Object.keys(data)) {\r\n      this._data[key] = data[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IDataInput {\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface IDataSelect extends IDataInput {\r\n  options?: Array<any>;\r\n  valueType?: string;\r\n  idType?: string;\r\n  outputType?: string;\r\n  multiple?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface IDataSelectBasic extends IDataInput {\r\n  options?: Array<any>;\r\n  firstOption?: string;\r\n  firstOptionValue?: string;\r\n  valueType?: string;\r\n  idType?: string;\r\n}\r\n\r\nexport interface IDataText extends IDataInput {\r\n  search?: Function;\r\n  selected: EventEmitter<any>;\r\n  valueType?: any;\r\n  options?: Array<any>;\r\n}\r\n\r\nexport interface IDataTextarea extends IDataInput {\r\n  rows?: any;\r\n}\r\n\r\n// export interface IDataDate extends IDataInput {\r\n\r\n// }\r\n\r\nexport interface IDataCheckbox extends IDataInput {\r\n  text?: string;\r\n}\r\n\r\nexport interface IDataFile extends IDataInput {\r\n  type?: number;\r\n}\r\n\r\nexport interface IDataRadio extends IDataInput {\r\n  inline?: boolean;\r\n  options?: Array<IDataRadioOption>;\r\n}\r\n\r\nexport interface IDataRadioOption {\r\n  text?: string;\r\n  value?: any;\r\n  class?: string;\r\n}\r\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n\r\nimport { LocaleData } from 'ngx-bootstrap/chronos/locale/locale.class';\r\n\r\nexport const vnViLocale: LocaleData = {\r\n  abbr: 'vn-vi',\r\n  months : 'Một_Hai_Ba_Bốn_Năm_Sáu_Bảy_Tám_Chín_Mười_Mười Một_Mười Hai'.split('_').map(m => `Tháng ${m}`),\r\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\r\n  weekdays : 'Chủ Nhật_Hai_Ba_Bốn_Năm_Sáu_Bảy'.split('_'),\r\n  weekdaysShort : 'CN_Hai_Ba_Bốn_Năm_Sáu_Bảy'.split('_'),\r\n  weekdaysMin : 'CN_Hai_Ba_Bốn_Năm_Sáu_Bảy'.split('_'),\r\n  longDateFormat : {\r\n    LT : 'HH:mm',\r\n    LTS : 'HH:mm:ss',\r\n    L : 'MM/DD/YYYY',\r\n    LL : 'D MMMM YYYY',\r\n    LLL : 'D MMMM YYYY HH:mm',\r\n    LLLL : 'dddd, MMMM YYYY HH:mm'\r\n  },\r\n  calendar : {\r\n    sameDay : '[Hôm nay lúc] LT',\r\n    nextDay : '[Ngày mai lúc] LT',\r\n    nextWeek : 'dddd [lúc] LT',\r\n    lastDay : '[Hôm qua lúc] LT',\r\n    lastWeek : '[Ngày] dddd [lúc] LT',\r\n    sameElse : 'L'\r\n  },\r\n  relativeTime : {\r\n    future : 'in %s',\r\n    past : '%s ago',\r\n    s : 'a few seconds',\r\n    ss : '%d seconds',\r\n    m : 'a minute',\r\n    mm : '%d minutes',\r\n    h : 'an hour',\r\n    hh : '%d hours',\r\n    d : 'a day',\r\n    dd : '%d days',\r\n    M : 'a month',\r\n    MM : '%d months',\r\n    y : 'a year',\r\n    yy : '%d years'\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\r\n  ordinal(_num: number): string {\r\n    const num = Number(_num);\r\n    const b = num % 10,\r\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\r\n        (b === 1) ? 'st' :\r\n          (b === 2) ? 'nd' :\r\n            (b === 3) ? 'rd' : 'th';\r\n    return num + output;\r\n  },\r\n  week : {\r\n    dow : 1, // Monday is the first day of the week.\r\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n  }\r\n};\r\n","import { DATE_FORMAT } from './input-type-date/input-type-date.component';\r\n\r\nexport const MESSAGE_VALIDATION = {\r\n};\r\n\r\nexport const MESSAGE_VALIDATION_RULE = {\r\n    required: 'Nhập đầy đủ các thông tin bắt buộc!',\r\n    maxlength: 'Too long',\r\n    minlength: 'Too short',\r\n    formatError: 'Sai định dạng',\r\n    toDateAfterfromDate: 'Ngày kết thúc phải sau ngày bắt đầu',\r\n    bsDate: `Nhập đúng định dạng ${DATE_FORMAT.toLowerCase()}`,\r\n    guidelineExist: `Văn bản đã tồn tại trong hệ thống`,\r\n    ngayBanHanh: `Ngày ban hành không thuộc năm kế hoạch`,\r\n};\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport enum FormMode {\r\n  View = 'view',\r\n  Edit = 'edit',\r\n}\r\n","import { Injectable, Inject, NgZone } from '@angular/core';\r\nimport { EVENT_MANAGER_PLUGINS, EventManager } from '@angular/platform-browser';\r\n\r\nfunction initial (array: any[]) {\r\n  return array.slice(0, array.length - 1);\r\n}\r\n\r\n@Injectable()\r\nexport class CustomEventManager extends EventManager {\r\n  constructor (@Inject(EVENT_MANAGER_PLUGINS) plugins: any[], private zone: NgZone) {\r\n    super(plugins, zone);\r\n  }\r\n\r\n  addEventListener (element: HTMLElement, eventName: string, handler: Function): Function {\r\n    if (eventName.endsWith('out-zone')) {\r\n      eventName = initial(eventName.split('.')).join('.');\r\n      return this.zone.runOutsideAngular(() =>\r\n        super.addEventListener(element, eventName, handler));\r\n    }\r\n\r\n    return super.addEventListener(element, eventName, handler);\r\n  }\r\n}","<ng-table [data]=\"data\"\r\n          [configurations]=\"configs\"\r\n></ng-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { random } from 'lodash';\r\nimport { ActionEvent, TableData } from '../../table';\r\nimport { TableConfigurations } from '../../table/core/table-configurations';\r\n\r\nconst nameMapper = {\r\n  1: 'Tỉnh 1',\r\n  2: 'Tỉnh 2',\r\n  3: 'Tỉnh 3',\r\n  4: 'Tỉnh 4',\r\n  5: 'Tỉnh 5',\r\n};\r\n\r\nconst name2Mapper = {\r\n  1: 'Huyện 1',\r\n  2: 'Huyện 2',\r\n  3: 'Huyện 3',\r\n};\r\n\r\nconst name3Mapper = {\r\n  1: 'Xã 1',\r\n  2: 'Xã 2',\r\n  3: 'Xã 3',\r\n};\r\n\r\n@Component({\r\n  selector: 'app-sheet-example',\r\n  templateUrl: './sheet-example.component.html',\r\n  styleUrls: ['./sheet-example.component.scss']\r\n})\r\nexport class SheetExampleComponent implements OnInit {\r\n\r\n  data = new TableData();\r\n\r\n  formulas = {\r\n    all: [\r\n      'total = col1 + col2',\r\n    ],\r\n    static: [\r\n      '{B.0} = sum({B.1:D.3}) + {C.1} + {D.2}'\r\n    ]\r\n  };\r\n\r\n  configs = new TableConfigurations({\r\n    columns: [\r\n      {\r\n        prop: 'total',\r\n        name: 'Total',\r\n        dataType: 'currency',\r\n        headerClass: 'hello2',\r\n        dataClass: 'hello',\r\n        subHeader: '(1)',\r\n        subHeaderClass: 'subHeaderClass',\r\n      },\r\n      {\r\n        prop: 'col1',\r\n        name: 'Col 1',\r\n        editable: true,\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col2',\r\n        name: 'Col 2',\r\n        editable: true,\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col3',\r\n        name: 'Col 3',\r\n        dataType: 'select',\r\n        editable: true,\r\n        options: [\r\n          {id: 1, value: 'col 3-1'},\r\n          {id: 2, value: 'col 3-2'},\r\n          {id: 3, value: 'col 3-3'},\r\n          {id: 4, value: 'col 3-4'},\r\n        ],\r\n      },\r\n      {\r\n        prop: 'col4',\r\n        name: 'Col 4',\r\n        dataType: 'link',\r\n        link: (row) => {\r\n          return 'test' + row.belongsTo;\r\n        },\r\n        useRouter: true,\r\n      },\r\n      {\r\n        prop: 'col5',\r\n        name: 'Col 5',\r\n        dataType: 'select',\r\n        editable: true,\r\n        editableWhen(row) {\r\n          return !row.col3;\r\n        },\r\n        options: [\r\n          {id: 1, value: 'hello 4'},\r\n          {id: 2, value: 'hello 5'},\r\n          {id: 3, value: 'hello 6'},\r\n          {id: 4, value: 'hello 7'}\r\n        ],\r\n        partialOptions(row) {\r\n          console.log(row);\r\n          if (parseInt(row.col3, 10) < 3) {\r\n            return [1, 2];\r\n          }\r\n\r\n          return [3, 4];\r\n        }\r\n      },\r\n      {\r\n        prop: 'col6',\r\n        name: 'Col 6',\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col7',\r\n        name: 'Col 7',\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col8',\r\n        name: 'Col 8',\r\n        dataType: 'date'\r\n      },\r\n    ],\r\n    rowGroups: [\r\n      {\r\n        groupBy: 'belongsTo',\r\n        name: (firstRowData) => firstRowData.name, // Optional\r\n        indexType: 'romanNumeral',\r\n      },\r\n      {\r\n        groupBy: 'sameId',\r\n        name: (firstRowData) => firstRowData.name2, // Optional\r\n        // indexPattern: (currentIndex, {parentIndex, parentText}) => {}, // Optional,\r\n      },\r\n      {\r\n        groupBy: 'sameId2',\r\n        name: (firstRowData) => firstRowData.name3, // Optional\r\n        indexPattern: (currentIndex, {parentIndex, parentText}) => {\r\n          return parentText + `.${currentIndex + 1}`;\r\n        }\r\n      }\r\n    ],\r\n    columnGroups: [\r\n      {\r\n        groupName: 'Hello world',\r\n        groupClass: 'first-class',\r\n        props: ['col1', 'col2'],\r\n        subGroups: [\r\n          {\r\n            groupName: 'Subgroup 1',\r\n            props: ['col3', 'col4'],\r\n          },\r\n          {\r\n            groupName: 'Subgroup 2',\r\n            props: ['col5', 'col6'],\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    index: {\r\n      show: true,\r\n      subHeader: 'indexSubheader',\r\n      subHeaderClass: 'indexSubheaderClass',\r\n      rowIndexPattern: (currentIndex, {parentIndex, parentText}) => {\r\n        return parentText + `.${currentIndex + 1}`;\r\n      },\r\n    },\r\n    actions: [\r\n      {\r\n        show: true,\r\n        name: 'Actions',\r\n        types: {\r\n          edit: {\r\n            icon: '',\r\n            name: 'Edit',\r\n          },\r\n          download: {\r\n            icon: '',\r\n            name: 'Download',\r\n          }\r\n        },\r\n        static: ['edit', 'download'],\r\n        // actionsOnRow({row, types}) {\r\n        //   if (row.sameId > 1) {\r\n        //     return ['edit', 'download'];\r\n        //   }\r\n        //\r\n        //   return ['download'];\r\n        // },\r\n        clicked: this.onTableButtonsClicked.bind(this)\r\n      },\r\n    ],\r\n  });\r\n\r\n  constructor () { }\r\n\r\n  ngOnInit () {\r\n    this.configs.hideActionType('edit');\r\n    this.configs.setOptions(5, [\r\n      {id: 1, value: 'col5 4'},\r\n      {id: 2, value: 'col5 5'},\r\n      {id: 3, value: 'col5 6'},\r\n      {id: 4, value: 'col5 7'}\r\n    ]);\r\n\r\n    setTimeout(() => {\r\n      this.data = new TableData(Array(100).fill(null).map((value, index) => (() => {\r\n        const id = random(1, 5);\r\n        const subId = random(1, 3);\r\n        const subId2 = random(1, 3);\r\n\r\n        const randomDate = () => new Date(random(2000, 2018), random(0, 11), random(1, 29));\r\n\r\n        return {\r\n          total: 0,\r\n          belongsTo: id,\r\n          name: nameMapper[id],\r\n          sameId: subId,\r\n          name2: name2Mapper[subId],\r\n          sameId2: subId2,\r\n          name3: name3Mapper[subId2],\r\n          col1: random(100000000, 1000000000),\r\n          col2: random(100000000, 1000000000),\r\n          col3: id < 3 ? random(1, 2) : random(3, 4),\r\n          col4: random(100000000, 1000000000),\r\n          col5: random(1, 4),\r\n          col6: random(100000000, 1000000000),\r\n          col7: random(100000000, 1000000000),\r\n          col8: randomDate()\r\n        };\r\n      })()));\r\n    }, 0);\r\n\r\n    setTimeout(() => {\r\n      this.configs.renameGroup('[0].groupName', 'What this <span style=\"color: red\">123</span>?');\r\n    }, 2000);\r\n\r\n    setTimeout(() => {\r\n      this.configs.showActionType('edit');\r\n      this.configs.renameColumn(0, 'What this <span style=\"color: red\">123</span>?');\r\n    }, 3000);\r\n  }\r\n\r\n  onTableButtonsClicked({type, row, rowIndex, group, tableData}: ActionEvent) {\r\n    tableData.delete(rowIndex, group);\r\n  }\r\n\r\n}\r\n","<ng-table [data]=\"data\"\r\n          [configurations]=\"configs\"\r\n></ng-table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TableData } from 'src/app/table';\r\nimport { random } from 'lodash';\r\n\r\nimport { TableConfigurations } from 'src/app/table/core/table-configurations';\r\n\r\n@Component({\r\n  selector: 'app-simple-table-example',\r\n  templateUrl: './simple-table-example.component.html',\r\n  styleUrls: ['./simple-table-example.component.scss']\r\n})\r\nexport class SimpleTableExampleComponent implements OnInit {\r\n\r\n  configs = new TableConfigurations({\r\n    columns: [\r\n      {\r\n        prop: 'total',\r\n        name: 'Total',\r\n        dataType: 'currency',\r\n        headerClass: 'hello2',\r\n        dataClass: 'hello',\r\n        subHeaderClass: 'subHeaderClass',\r\n      },\r\n      {\r\n        prop: 'col1',\r\n        name: 'Col 1',\r\n        editable: true,\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col2',\r\n        name: 'Col 2',\r\n        editable: true,\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col3',\r\n        name: 'Col 3',\r\n        dataType: 'select',\r\n        editable: true,\r\n        options: [\r\n          {id: 1, value: 'col 3-1'},\r\n          {id: 2, value: 'col 3-2'},\r\n          {id: 3, value: 'col 3-3'},\r\n          {id: 4, value: 'col 3-4'},\r\n        ],\r\n      },\r\n      {\r\n        prop: 'col4',\r\n        name: 'Col 4',\r\n        dataType: 'link',\r\n        link: (row) => {\r\n          return 'test' + row.belongsTo;\r\n        },\r\n        useRouter: true,\r\n      },\r\n      {\r\n        prop: 'col5',\r\n        name: 'Col 5',\r\n        dataType: 'select',\r\n        editable: true,\r\n        editableWhen(row) {\r\n          return !row.col3;\r\n        },\r\n        options: [\r\n          {id: 1, value: 'hello 4'},\r\n          {id: 2, value: 'hello 5'},\r\n          {id: 3, value: 'hello 6'},\r\n          {id: 4, value: 'hello 7'}\r\n        ],\r\n        partialOptions(row) {\r\n          console.log(row);\r\n          if (parseInt(row.col3, 10) < 3) {\r\n            return [1, 2];\r\n          }\r\n\r\n          return [3, 4];\r\n        }\r\n      },\r\n      {\r\n        prop: 'col6',\r\n        name: 'Col 6',\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col7',\r\n        name: 'Col 7',\r\n        dataType: 'currency'\r\n      },\r\n      {\r\n        prop: 'col8',\r\n        name: 'Col 8',\r\n        dataType: 'date'\r\n      },\r\n    ],\r\n    index: {\r\n      show: true,\r\n    },\r\n    actions: [\r\n      {\r\n        show: true,\r\n        name: 'Actions',\r\n        types: {\r\n          edit: {\r\n            icon: '',\r\n            name: 'Edit',\r\n          },\r\n          download: {\r\n            icon: '',\r\n            name: 'Download',\r\n          }\r\n        },\r\n        static: ['edit', 'download'],\r\n        // actionsOnRow({row, types}) {\r\n        //   if (row.sameId > 1) {\r\n        //     return ['edit', 'download'];\r\n        //   }\r\n        //\r\n        //   return ['download'];\r\n        // },\r\n      },\r\n    ],\r\n    editing: {\r\n      enabled: true,\r\n      allowAdding: true,\r\n    }\r\n  });\r\n\r\n  data = new TableData(Array(15).fill(null).map((value, index) => (() => {\r\n    const id = random(1, 5);\r\n    const subId = random(1, 3);\r\n    const subId2 = random(1, 3);\r\n\r\n    const randomDate = () => new Date(random(2000, 2018), random(0, 11), random(1, 29));\r\n\r\n    return {\r\n      total: 0,\r\n      col1: random(100000000, 1000000000),\r\n      col2: random(100000000, 1000000000),\r\n      col3: id < 3 ? random(1, 2) : random(3, 4),\r\n      col4: random(100000000, 1000000000),\r\n      col5: random(1, 4),\r\n      col6: random(100000000, 1000000000),\r\n      col7: random(100000000, 1000000000),\r\n      col8: randomDate()\r\n    };\r\n  })()));\r\n\r\n  constructor () { }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\nimport { PaginationService } from './pagination.service';\r\n\r\n@Component({\r\n  selector: 'pageable',\r\n  template: '<ng-content></ng-content>',\r\n  providers: [PaginationService]\r\n})\r\nexport class PageableComponent implements OnInit {\r\n\r\n  constructor () { }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { merge } from 'lodash';\r\n\r\nexport interface CurrentPage {\r\n  pageNumber: number;\r\n  pageSize: number;\r\n}\r\n\r\nexport interface InternalCurrentPage extends CurrentPage {\r\n  $$fromUser: boolean;\r\n}\r\n\r\nexport interface PageMetadata {\r\n  $$totalPages: number;\r\n  $$next: boolean;\r\n  $$prev: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n\r\n  private page$ = new BehaviorSubject<InternalCurrentPage>({\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    $$fromUser: false,\r\n  });\r\n\r\n  private metadata$ = new BehaviorSubject<PageMetadata>({\r\n    $$totalPages: 10,\r\n    $$next: true,\r\n    $$prev: false,\r\n  });\r\n\r\n  private totalItems$ = new BehaviorSubject<number>(100);\r\n\r\n  constructor() { }\r\n\r\n  set(page: Partial<InternalCurrentPage>) {\r\n    const newPage = this.mergePage(page);\r\n    this.page$.next(newPage);\r\n    this.calculateMeta();\r\n  }\r\n\r\n  setTotalItems(total: number) {\r\n    this.totalItems$.next(total);\r\n    this.calculateMeta();\r\n  }\r\n\r\n  getPage(noFilter?): Observable<CurrentPage> {\r\n    const array = [\r\n      filter<any>(page => !page.$$fromUser),\r\n      map<any, any>(page => ({\r\n        pageNumber: page.pageNumber,\r\n        pageSize: page.pageSize\r\n      }))\r\n    ];\r\n    if (noFilter) {\r\n      array.shift();\r\n    }\r\n    const obs = this.page$.asObservable();\r\n\r\n    return obs.pipe.apply(obs, array);\r\n  }\r\n\r\n  getMetadata(): Observable<PageMetadata> {\r\n    return this.metadata$.asObservable();\r\n  }\r\n\r\n  getTotalItems(): Observable<number> {\r\n    return this.totalItems$.asObservable();\r\n  }\r\n\r\n  next() {\r\n    const next = this.page$.getValue().pageNumber + 1;\r\n    this.set({ pageNumber: next });\r\n  }\r\n\r\n  previous() {\r\n    const current = this.page$.getValue().pageNumber;\r\n    const prev = current - 1 === 0 ? 1 : current - 1;\r\n    this.set({ pageNumber: prev });\r\n  }\r\n\r\n  last() {\r\n    const totalPages = this.metadata$.getValue().$$totalPages;\r\n    this.set({ pageNumber: totalPages });\r\n  }\r\n\r\n  first() {\r\n    this.set({ pageNumber: 1 });\r\n  }\r\n\r\n  private mergePage(newPage: Partial<InternalCurrentPage>) {\r\n    const oldPage = { ...this.page$.getValue() };\r\n    if (!Object.prototype.hasOwnProperty.call(newPage, '$$fromUser')) {\r\n      newPage.$$fromUser = false;\r\n    }\r\n    merge(oldPage, newPage);\r\n    return oldPage;\r\n  }\r\n\r\n  private calculateMeta() {\r\n    const page = this.page$.getValue();\r\n    let totalPage = page.pageSize !== 0 ? this.totalItems$.getValue() / page.pageSize : 0;\r\n    totalPage = Math.ceil(!isNaN(totalPage) ? totalPage : 0);\r\n    const canNext = page.pageNumber < totalPage;\r\n    const canPrev = page.pageNumber > 1;\r\n    this.metadata$.next({\r\n      $$totalPages: totalPage,\r\n      $$next: canNext,\r\n      $$prev: canPrev\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PageableComponent } from './pageable.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PrependZeroPipe } from './prepend-zero.pipe';\r\nimport { TableMetadataComponent } from './table-metadata.component';\r\nimport { TablePaginatorComponent } from './table-paginator.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [\r\n    PageableComponent,\r\n    TableMetadataComponent,\r\n    TablePaginatorComponent,\r\n    PrependZeroPipe,\r\n  ],\r\n  exports: [\r\n    PageableComponent,\r\n    TableMetadataComponent,\r\n    TablePaginatorComponent,\r\n  ]\r\n})\r\nexport class PaginatorModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'prependZero'\r\n})\r\nexport class PrependZeroPipe implements PipeTransform {\r\n\r\n  transform(value: number | string, args?: any): any {\r\n    value = typeof value === 'string' ? parseInt(value, 10) : value;\r\n    return value < 10 ? '0' + value : value;\r\n  }\r\n\r\n}\r\n","<div class=\"lines-per-page d-flex pb-3 text-right\"\r\n     [ngClass]=\"{'justify-content-end': alignItem == 'align-right', 'justify-content-center': alignItem == 'align-center'}\">\r\n  <div class=\"d-flex align-items-center font-italic\">Tổng số bản ghi: {{ total$ | async }}</div>\r\n  <div class=\"align-self-center flex-grow-1 font-italic mr-2\">Số dòng mỗi trang: </div>\r\n  <div>\r\n    <select [formControl]=\"selectControl\" class=\"custom-selection form-control d-inline p-0\">\r\n      <option *ngFor=\"let item of linesPerPage\" [value]=\"item\">{{ item }}</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { PaginationService } from './pagination.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { untilDestroyed } from 'ngx-take-until-destroy';\r\n\r\n@Component({\r\n  selector: 'table-metadata',\r\n  templateUrl: './table-metadata.component.html',\r\n  styleUrls: ['./table-metadata.component.scss']\r\n})\r\nexport class TableMetadataComponent implements OnInit, OnDestroy {\r\n  @Input() alignItem: string;\r\n\r\n  @Input() set totalItems (value: number) {\r\n    this.pagination.setTotalItems(value);\r\n  }\r\n\r\n  @Input() set pageSize (value: number) {\r\n    this.pagination.set({ pageSize: value, $$fromUser: true });\r\n  }\r\n\r\n  @Output() totalRecords = new EventEmitter();\r\n\r\n  linesPerPage = [10, 20, 30, 40];\r\n  total$: Observable<number>;\r\n  selectControl = new FormControl(10);\r\n\r\n  constructor (private pagination: PaginationService) { }\r\n\r\n  ngOnInit () {\r\n    this.total$ = this.pagination.getTotalItems() as Observable<number>;\r\n\r\n    this.pagination.getPage(true)\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe(({pageSize}) => {\r\n        this.selectControl.setValue(pageSize, { emitEvent: false });\r\n      });\r\n\r\n    this.selectControl.valueChanges.pipe(untilDestroyed(this)).subscribe(value => {\r\n      this.pagination.set({ pageSize: parseInt(value, 10), pageNumber: 1 });\r\n      this.totalRecords.emit(value);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n  }\r\n\r\n}\r\n","<div class=\"pagination d-flex align-items-center\" [ngClass]=\"{'justify-content-end': alignItem == 'align-right', 'justify-content-center': alignItem == 'align-center'}\">\r\n  <div class=\"step-backward d-flex mx-2\" (click)=\"pagination.first()\" [ngClass]=\"{ 'disabled-pagination': (canPrev | async) }\"><i class=\"fa arrow-left\" aria-hidden=\"true\" [ngClass]=\"{ 'disabled-pagination': (canPrev | async) }\"></i></div>\r\n  <div class=\"d-flex mx-2\" (click)=\"pagination.previous()\" [ngClass]=\"{ 'disabled-pagination': (canPrev | async) }\"><i class=\"fa arrow-left\" aria-hidden=\"true\"></i></div>\r\n  <div class=\"d-flex mx-1\">\r\n    <div class=\"flex-shrink-0 align-self-center\">Tới trang:</div>\r\n    <select [formControl]=\"pageControl\" class=\"custom-selection form-control d-inline mx-2 p-0\">\r\n      <option *ngFor=\"let item of listPage$ | async\" [value]=\"item\">{{ item }}</option>\r\n    </select>\r\n    <div class=\"flex-shrink-0 align-self-center\">Trên {{ totalPages$ | async | prependZero }}</div>\r\n  </div>\r\n  <div class=\"d-flex mx-2\" (click)=\"pagination.next()\" [ngClass]=\"{ 'disabled-pagination': (canNext | async) }\"><i class=\"fa arrow-right\" aria-hidden=\"true\"></i></div>\r\n  <div class=\"step-forward d-flex mx-2 justify-content-end\" (click)=\"pagination.last()\" [ngClass]=\"{ 'disabled-pagination': (canNext | async) }\"><i class=\"fa arrow-right\" aria-hidden=\"true\"></i></div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { range } from 'lodash';\r\nimport { PaginationService } from './pagination.service';\r\nimport { untilDestroyed } from 'ngx-take-until-destroy';\r\nimport { Observable } from 'rxjs';\r\nimport { map, pluck } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'table-pagination',\r\n  templateUrl: './table-paginator.component.html',\r\n  styleUrls: ['./table-paginator.component.scss']\r\n})\r\nexport class TablePaginatorComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() alignItem = 'align-right';\r\n\r\n  @Input() set pageNumber (value: number) {\r\n    this.pagination.set({ pageNumber: value, $$fromUser: true });\r\n  }\r\n\r\n  @Output() page = new EventEmitter();\r\n\r\n  pageControl = new FormControl();\r\n  totalPages$: Observable<number>;\r\n  listPage$: Observable<number[]>;\r\n\r\n  constructor (public pagination: PaginationService\r\n  ) {}\r\n\r\n  ngOnInit () {\r\n    this.totalPages$ = this.pagination.getMetadata().pipe(pluck('$$totalPages'));\r\n    this.listPage$ = this.totalPages$.pipe(map(total => range(1, total + 1)));\r\n\r\n    this.pagination.getPage(true).pipe(untilDestroyed(this)).subscribe(page => {\r\n      this.pageControl.setValue(page.pageNumber, { emitEvent: false });\r\n    });\r\n\r\n    this.pagination.getPage()\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe(this.page);\r\n\r\n    this.pageControl.valueChanges\r\n      .pipe(untilDestroyed(this))\r\n      .subscribe(page => {\r\n        this.pagination.set({ pageNumber: parseInt(page, 10) });\r\n      });\r\n  }\r\n\r\n  get canNext () {\r\n    return this.pagination.getMetadata().pipe(map(res => !res.$$next));\r\n  }\r\n\r\n  get canPrev () {\r\n    return this.pagination.getMetadata().pipe(map(res => !res.$$prev));\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n  }\r\n\r\n}\r\n","<td class=\"text-center\">\r\n  <i class=\"m-1 fa fa-plus icon icon-plus\" (click)=\"onAddClick($event)\"></i>\r\n</td>\r\n<ng-container *ngFor=\"let config of configs.columns; let colIndex = index; trackBy: trackByIndex\">\r\n  <td table-cell-adding\r\n      #addingCell\r\n      [active]=\"isActiveCell(addingCell)\"\r\n      [column]=\"colIndex\"\r\n      [columnConfigs]=\"config\"\r\n  ></td>\r\n</ng-container>\r\n<td *ngFor=\"let _ of configs.actions\"></td>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { AddingDataService } from '../table-cell-for-adding/adding-data.service';\r\nimport { TableCellForAddingComponent } from '../table-cell-for-adding/table-cell-for-adding.component';\r\nimport { AddingCellService } from '../table-cell-for-adding/adding-cell.service';\r\nimport { TableDataService } from '../data/table-data.service';\r\nimport { TableConfigs } from '../table.models';\r\nimport { TableData } from '../table-data';\r\n\r\n@Component({\r\n  selector: '[adding-row]',\r\n  templateUrl: './adding-row.component.html',\r\n  styleUrls: ['./adding-row.component.scss'],\r\n  providers: [\r\n    AddingDataService,\r\n  ]\r\n})\r\nexport class AddingRowComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Input() configs: TableConfigs;\r\n\r\n  @Input()\r\n  set data (value: TableData) {\r\n    this._data = value;\r\n    if (this.configs.editing && this.configs.editing.allowAdding) {\r\n      this.createRow(value);\r\n    }\r\n  }\r\n\r\n  activeCell: TableCellForAddingComponent | null;\r\n\r\n  private _data: TableData;\r\n\r\n  private _event;\r\n\r\n  constructor (private _addingDataService: AddingDataService,\r\n               private _addingCellService: AddingCellService,\r\n               private _tableDataService: TableDataService,\r\n               private _cd: ChangeDetectorRef,\r\n               private _elementRef: ElementRef,\r\n               private _ngZone: NgZone,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.onActivatedCellChanged();\r\n  }\r\n\r\n  ngAfterViewInit (): void {\r\n    this.deactiveOnClickedOutside();\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    this._ngZone.runOutsideAngular(() => document.removeEventListener('click', this._event));\r\n  }\r\n\r\n  trackByIndex (index) {\r\n    return index;\r\n  }\r\n\r\n  isActiveCell (cell: any) {\r\n    return this.activeCell === cell;\r\n  }\r\n\r\n  onAddClick (event) {\r\n    this._addingCellService.setActive(null);\r\n    this._tableDataService.addRow(this._addingDataService.addingRowData);\r\n    this.createRow(this._data);\r\n  }\r\n\r\n  private onActivatedCellChanged () {\r\n    this._addingCellService.activeCell.subscribe((cell) => {\r\n      this.activeCell = cell;\r\n      this._cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  private deactiveOnClickedOutside () {\r\n    const $addingRow: HTMLElement = this._elementRef.nativeElement;\r\n    const eventListener = this._event = event => {\r\n      if (!$addingRow.contains(event.target)) {\r\n        this._addingCellService.setActive(null);\r\n      }\r\n    };\r\n\r\n    this._ngZone.runOutsideAngular(() => document.addEventListener('click', eventListener));\r\n  }\r\n\r\n  private createRow (value: TableData) {\r\n    const addingRow = this.configs.columns.reduce((prev, current) => {\r\n      prev[current.prop] = '';\r\n      return prev;\r\n    }, {\r\n      ...value.initialData[0] || {},\r\n    });\r\n    delete addingRow[this.configs['rowIdentifier']];\r\n    this._addingDataService.addingRowData = addingRow;\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"columnConfigs.dataType\">\r\n  <ng-container *ngSwitchCase=\"'select'\">\r\n    {{ columnConfigs['$$options'][data] }}\r\n  </ng-container>\r\n  <ng-container *ngSwitchCase=\"'date'\">\r\n    {{ data | dateToString }}\r\n  </ng-container>\r\n  <ng-container *ngSwitchCase=\"'link'\">\r\n    <a class=\"text-link\" *ngIf=\"columnConfigs.link && columnConfigs.useRouter\" [routerLink]=\"cellData.url\">{{ cellData.value }}</a>\r\n    <a class=\"text-link\" *ngIf=\"columnConfigs.link && !columnConfigs.useRouter\" [href]=\"cellData.url\">{{ cellData.value }}</a>\r\n  </ng-container>\r\n  <ng-container *ngSwitchCase=\"'currency'\">\r\n    {{ data | vnd }}\r\n  </ng-container>\r\n  <ng-container *ngSwitchDefault>\r\n    {{ data }}\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TableColumnConfigurations } from '@app/table';\r\nimport { CellData } from '@app/table/core/data/table-data-internal';\r\n\r\n@Component({\r\n  selector: 'data-only-cell',\r\n  templateUrl: './data-only-cell.component.html',\r\n  styleUrls: ['./data-only-cell.component.scss']\r\n})\r\nexport class DataOnlyCellComponent implements OnInit {\r\n\r\n  @Input() columnConfigs: TableColumnConfigurations;\r\n  @Input() cellData: CellData;\r\n\r\n  constructor () { }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n  get data() {\r\n    return this.cellData.value;\r\n  }\r\n\r\n}\r\n","export function getCachedArray (object, key) {\r\n  let cachedArray = object[key];\r\n  if (!cachedArray) {\r\n    object[key] = cachedArray = [];\r\n  }\r\n  return cachedArray;\r\n}\r\n\r\nexport function groupByCriteria <T> (data: T[], groupByCriteria: string, parentPath?): { [p: string]: T[] };\r\nexport function groupByCriteria <T, R> (data: T[], groupByCriteria: string, parentPath?): { [p: string]: R[] } {\r\n  const resultGroup = {};\r\n\r\n  data.forEach((eachData) => {\r\n    const groupByValue = !parentPath\r\n      ? eachData[groupByCriteria]\r\n      : parentPath + '.' + eachData[groupByCriteria];\r\n\r\n    let groupedArray = resultGroup[groupByValue];\r\n    if (!groupedArray) {\r\n      groupedArray = [];\r\n      resultGroup[groupByValue] = groupedArray;\r\n    }\r\n\r\n    eachData['$$groupPath'] = groupByValue;\r\n    groupedArray.push(eachData);\r\n  });\r\n\r\n  return resultGroup;\r\n}\r\n\r\nexport function extractParentKey (childKey: string) {\r\n  const lastDot = childKey.lastIndexOf('.');\r\n  return lastDot > 0 ? childKey.substr(0, lastDot) : childKey;\r\n}\r\n","import { cloneDeep, forEachRight, get, orderBy, set } from 'lodash';\r\nimport { TableConfigurations } from '../table-configurations';\r\nimport { TableColumnConfigurations, TableRowGroupsConfiguration } from '../table.models';\r\nimport { extractParentKey, getCachedArray, groupByCriteria } from './row-grouping.utils';\r\nimport { getIndexFunction, mapToTableCells } from './table-data.utils';\r\nimport { TableData } from '../table-data';\r\n\r\nexport interface GroupData<T> {\r\n  [p: string]: T[];\r\n}\r\n\r\nexport interface DataWithMeta extends AnyKindOfData {\r\n  $$groupPath?: string;\r\n}\r\n\r\nexport interface AnyKindOfData {\r\n  [p: string]: any;\r\n}\r\n\r\nexport interface InternalGroupData {\r\n  indexFn?: Function;\r\n  originalData?: any[];\r\n  groupIndex?: number;\r\n  configs?: TableRowGroupsConfiguration;\r\n  name?: string;\r\n  path?: string;\r\n  data?: CellData[][];\r\n  firstRow?: any;\r\n  subGroups?: InternalGroupData[];\r\n}\r\n\r\nconst wordMapper = {\r\n  A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, I: 8, K: 9, L: 10,\r\n  M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18, U: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n};\r\n\r\nexport interface CellData {\r\n  value: any;\r\n  url?: string;\r\n}\r\n\r\nexport class TableDataInternal {\r\n  public isGroup = false;\r\n  public isSimple = false;\r\n\r\n  public data: CellData[][] = [];\r\n  public groupData: InternalGroupData[];\r\n\r\n  public readonly columnConfigs: TableColumnConfigurations[];\r\n  public readonly initialData: any[];\r\n  public readonly deleted = [];\r\n\r\n  public readonly internalData: any[];\r\n\r\n  constructor (private readonly configs: TableConfigurations,\r\n               private readonly tableData: TableData,\r\n  ) {\r\n    this.isGroup = this.configs.states.rowGroups && this.configs.states.rowGroups.length > 0;\r\n    this.isSimple = !this.isGroup;\r\n    this.columnConfigs = configs.states.columns;\r\n    this.initialData = cloneDeep(tableData.initialData);\r\n    this.internalData = cloneDeep(tableData.initialData);\r\n    this.buildRows(this.initialData, this.columnConfigs, this.configs.states.rowGroups);\r\n  }\r\n\r\n  getRow (row, group?) {\r\n    if (group) {\r\n      const index = this.initialData.findIndex(i => i === group.originalData[row]);\r\n      return this.internalData[index];\r\n    }\r\n\r\n    return this.internalData[row];\r\n  }\r\n\r\n  addRow(columnsConfigs: TableColumnConfigurations[], newRowData: any | any[], group?) {\r\n    if (group) {\r\n      return;\r\n    }\r\n\r\n    newRowData = Array.isArray(newRowData) ? newRowData : [newRowData];\r\n    const newRows = newRowData.map(row => mapToTableCells(columnsConfigs, row));\r\n    this.data = this.data.concat(newRows);\r\n    this.initialData.push(...newRowData);\r\n    this.internalData.push(...newRowData);\r\n  }\r\n\r\n  deleteRow (row, group?) {\r\n    if (group) {\r\n      const index = this.initialData.findIndex(i => i === group.originalData[row]);\r\n      group.data.splice(row, 1);\r\n      group.originalData.splice(row, 1);\r\n\r\n      this.initialData.splice(index, 1);\r\n      this.deleted.push(this.internalData.splice(index, 1)[0]);\r\n      return;\r\n    }\r\n    this.data.splice(row, 1);\r\n\r\n    this.initialData.splice(row, 1);\r\n    this.deleted.push(this.internalData.splice(row, 1)[0]);\r\n  }\r\n\r\n  getCell (row, col, group?) {\r\n    if (group) {\r\n      const path = this.getDataRowPath(group.path, row);\r\n      const data = get(this.groupData, path);\r\n      return data[col];\r\n    }\r\n    return this.data[row][col];\r\n  }\r\n\r\n  getCellValue (row, col, group?) {\r\n    return this.getCell(row, col, group).value;\r\n  }\r\n\r\n  setCell (row, col, group, cell: CellData) {\r\n    if (group) {\r\n      const path = this.getGroupPath(group.path);\r\n      set(this.groupData, path + `[${row}][${col}]`, cell);\r\n    } else {\r\n      this.data[row][col] = cell;\r\n    }\r\n    this.patchInitialData(row, col, group, cell.value);\r\n  }\r\n\r\n  setCellValue (row, col, group, value: any) {\r\n    this.setCell(row, col, group, {value});\r\n  }\r\n\r\n  private patchInitialData (row, col, group, newValue) {\r\n    const colProp = this.getProp(col);\r\n\r\n    if (group) {\r\n      const rowData = group.originalData[row];\r\n      rowData[col] = newValue;\r\n      const initialDataIndex = this.initialData.findIndex(i => i === rowData);\r\n      this.initialData[initialDataIndex][colProp] = newValue;\r\n      this.internalData[initialDataIndex][colProp] = newValue;\r\n    } else {\r\n      this.initialData[row][colProp] = newValue;\r\n      this.internalData[row][colProp] = newValue;\r\n    }\r\n  }\r\n\r\n  private getProp (column: number) {\r\n    return this.columnConfigs[column]['prop'];\r\n  }\r\n\r\n  private buildRows<T> (data: Object[], columnConfigs: TableColumnConfigurations[], rowGroups?: any[]) {\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    if (this.isGroup) {\r\n      const _rowGroups = this.buildGroupedRows(data, columnConfigs, rowGroups);\r\n      this.groupData = this.buildGroupData(_rowGroups);\r\n      return;\r\n    }\r\n\r\n    this.data = this.buildSimpleRows(data, columnConfigs);\r\n  }\r\n\r\n  private buildSimpleRows (data: Object[], columnsConfigs: TableColumnConfigurations[]) {\r\n    return data.map(item => mapToTableCells(columnsConfigs, item));\r\n  }\r\n\r\n  private buildGroupedRows<T> (data: Object[], columnConfigs: TableColumnConfigurations[], rowGroups?: TableRowGroupsConfiguration[]) {\r\n    const groupedRows: { groupData: GroupData<DataWithMeta> , groupConfigs: TableRowGroupsConfiguration }[] = [];\r\n    rowGroups.forEach((groupConfigs, groupIndex) => {\r\n      if (groupIndex === 0) {\r\n        groupedRows.push({\r\n          groupConfigs,\r\n          groupData: groupByCriteria(data, groupConfigs.groupBy)\r\n        });\r\n        return;\r\n      }\r\n\r\n      const groupData = {};\r\n      const parent = groupedRows[groupIndex - 1].groupData;\r\n      Object.entries(parent)\r\n        .map(([key, groupedParent]: [any, any]) => groupByCriteria(groupedParent, groupConfigs.groupBy, key))\r\n        .forEach(d => Object.assign(groupData, d)); // merge all props from object returned from groupByCriteria into groupData object\r\n      groupedRows.push({ groupConfigs, groupData });\r\n    });\r\n\r\n    const result = [];\r\n    let prevGroupedRowsMap = {};\r\n    forEachRight(groupedRows, (groupRow, groupIndex) => {\r\n      const { groupData, groupConfigs } = groupRow;\r\n      if (groupIndex === groupedRows.length - 1) { // the last group\r\n        this.objectEntriesWithOrders(groupData, groupConfigs).forEach(([key, arrayOfData]: [string, any[]]) => {\r\n          const parentKey = extractParentKey(key);\r\n          const objectToPush: InternalGroupData = {\r\n            indexFn: getIndexFunction(groupConfigs),\r\n            originalData: arrayOfData,\r\n            groupIndex,\r\n            configs: groupConfigs,\r\n            data: arrayOfData.map(item => mapToTableCells(columnConfigs, item)),\r\n          };\r\n          if (!parentKey) {\r\n            result.push(objectToPush);\r\n          } else {\r\n            const cachedArray = getCachedArray(prevGroupedRowsMap, parentKey);\r\n            cachedArray.push(objectToPush);\r\n          }\r\n        });\r\n      } else if (groupIndex > 0) { // other group\r\n        const copiedPrevMap = {...prevGroupedRowsMap};\r\n        prevGroupedRowsMap = {};\r\n        this.objectEntriesWithOrders(copiedPrevMap, groupConfigs).forEach(([key, arrayOfChildGroups]) => {\r\n          const parentKey = extractParentKey(key);\r\n          const cacheArray = getCachedArray(prevGroupedRowsMap, parentKey);\r\n          cacheArray.push({\r\n            indexFn: getIndexFunction(groupConfigs),\r\n            originalData: arrayOfChildGroups,\r\n            groupIndex,\r\n            configs: groupConfigs,\r\n            subGroups: arrayOfChildGroups\r\n          } as InternalGroupData);\r\n        });\r\n      } else { // first group\r\n        this.objectEntriesWithOrders(prevGroupedRowsMap, groupConfigs).forEach(([key, arrayOfChildGroups]) => {\r\n          result.push({\r\n            indexFn: getIndexFunction(groupConfigs),\r\n            originalData: arrayOfChildGroups,\r\n            groupIndex,\r\n            configs: groupConfigs,\r\n            subGroups: arrayOfChildGroups,\r\n          } as InternalGroupData);\r\n        });\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private objectEntriesWithOrders (groupData: {[p: string]: any[]}, group: TableRowGroupsConfiguration) {\r\n    let result = orderBy(Object.entries(groupData) as any, ([key]) => key, group.orders as any);\r\n    if (group.dataOrders) {\r\n      result = result.map(([key, value]) => ([\r\n        key,\r\n        orderBy.apply(null, [value].concat(group.dataOrders))\r\n      ]));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private buildGroupData (groupData) {\r\n    const _groupBuild = [...groupData];\r\n    const indexes = [];\r\n    const buildGroupData = (groupBuild): any => {\r\n      const clone = [...groupBuild];\r\n\r\n      clone.forEach((data, index) => {\r\n        indexes.push(index);\r\n        data['path'] = indexes.join('.');\r\n        if (data.subGroups) {\r\n          buildGroupData(data.subGroups);\r\n        }\r\n        indexes.pop();\r\n      });\r\n    };\r\n\r\n    buildGroupData(_groupBuild);\r\n    return _groupBuild;\r\n  }\r\n\r\n  private getDataRowPath(path, row) {\r\n    return path.split('.').map(index => `[${index}]`).join('.subGroups') + `.data[${row}]`;\r\n  }\r\n\r\n  private getGroupPath(path) {\r\n    return path.split('.').map(index => `[${index}]`).join('.subGroups') + `.data`;\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Injectable } from '@angular/core';\r\nimport { TableDataInternal } from './table-data-internal';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport * as math from 'mathjs';\r\nimport { merge } from 'lodash';\r\nimport { CellManager } from '../table-cell/cell-manager.service';\r\nimport { FormulaParser } from '../formula/formula-parser';\r\nimport { CellService } from '../table-cell/cell.service';\r\nimport { TableData } from '../table-data';\r\nimport { TableConfigurations } from '../table-configurations';\r\n\r\ninterface ValueSetterOptions {\r\n  detect?: boolean;\r\n  emitEvent?: boolean;\r\n  formulaCheck?: boolean;\r\n}\r\n\r\nconst defaultValueSetterOptions: any = {\r\n  detect: true,\r\n  emitEvent: true,\r\n};\r\n\r\nconst getColumnFromSymbol = (symbol: string) => parseInt(symbol.substr(1), 10);\r\n\r\nlet id = 0;\r\n\r\n@Injectable()\r\nexport class TableDataService {\r\n  public tableDataInternal: TableDataInternal;\r\n\r\n  private _formulaParser: FormulaParser;\r\n\r\n  private _changes$ = new Subject<any>();\r\n  private _changesObs = this._changes$.asObservable();\r\n\r\n  private _cellService: CellService;\r\n\r\n  private _configurations: TableConfigurations;\r\n\r\n  constructor (private _cellManager: CellManager,\r\n               private _cd: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  setTableData (configurations: TableConfigurations, value: TableData) {\r\n    this.tableDataInternal = new TableDataInternal(configurations, value);\r\n    this._configurations = configurations;\r\n    if (configurations.states.formulas) {\r\n      this._formulaParser = new FormulaParser(configurations.states);\r\n      defaultValueSetterOptions.formulaCheck = true;\r\n    }\r\n  }\r\n\r\n  setValue (row, col, group, value, options?: ValueSetterOptions) {\r\n    options = merge({...defaultValueSetterOptions}, options);\r\n    const prevValue = this.tableDataInternal.getCell(row, col, group).value;\r\n    this.tableDataInternal.setCell(row, col, group, {value});\r\n\r\n    if (options.detect) {\r\n      // TODO: fix cell manager\r\n      // this._cellManager.detectChanges({row, column: col});\r\n    }\r\n\r\n    if (options.emitEvent) {\r\n      this._changes$.next({row, col, group, value, prevValue});\r\n    }\r\n\r\n    if (options.formulaCheck) {\r\n      const formula = this._formulaParser.getFormulaForColumn(col);\r\n      if (formula) {\r\n        const [resultSymbol, expression] = formula.split('=');\r\n        const replacers = this._formulaParser.getReplacersForFormula(formula).filter(r => {\r\n          const column = this._formulaParser.symbolMap[r].substr(1);\r\n          return col !== (+column) || r !== resultSymbol;\r\n        });\r\n        this._cellManager.getCellsInRow(row, group).subscribe(cells => {\r\n          const resultCell = cells.find(cell => cell.column === getColumnFromSymbol(resultSymbol));\r\n          const scope = merge({}, ...cells.filter(cell => replacers.includes(cell.prop)).map(cell => ({\r\n            ['x' + cell.column]: cell.data || 0\r\n          })));\r\n          const resultValue = math.eval(expression, scope);\r\n          this.setValue(resultCell.row, resultCell.column, group, resultValue, {\r\n            formulaCheck: false,\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getValue (row, col, group?) {\r\n    return this.tableDataInternal.getCellValue(row, col, group);\r\n  }\r\n\r\n  getRow (row, group?) {\r\n    return this.tableDataInternal.getRow(row, group);\r\n  }\r\n\r\n  deleteRow (row, group?) {\r\n    this._cellService.setActive(null);\r\n    this.tableDataInternal.deleteRow(row, group);\r\n    this._cd.detectChanges();\r\n  }\r\n\r\n  getCell (row, col, group?) {\r\n    return this.tableDataInternal.getCell(row, col, group);\r\n  }\r\n\r\n  changes (row, col, group) {\r\n    return this._changesObs.pipe(\r\n      filter(({row: changedRow, col: changedCol, group: changedGroup}) =>\r\n        changedRow === row && changedCol === col && (group ? changedGroup === group : true)),\r\n      map(({value, prevValue}) => ({value, old: prevValue}))\r\n    );\r\n  }\r\n\r\n  allChanges() {\r\n    return this._changesObs;\r\n  }\r\n\r\n  addRow(data: any | any[]) {\r\n    const canGeneratedId = this._configurations.states.editing.generateIdentifier;\r\n    const idKey = this._configurations.states.rowIdentifier;\r\n\r\n    data = Array.isArray(data) ? data : [data];\r\n    data = data.map(d => ({\r\n      ...d,\r\n      ...canGeneratedId ? { [idKey]: `#${++id}` } : {},\r\n      __generated: true\r\n    }));\r\n\r\n    this.tableDataInternal.addRow(this._configurations.states.columns, data);\r\n    this._cd.markForCheck();\r\n  }\r\n\r\n}\r\n","import { TableColumnConfigurations } from '../table.models';\r\n\r\nconst romanNumeralLookup = {\r\n  M: 1000, CM: 900, D: 500, CD: 400,\r\n  C: 100, XC: 90, L: 50, XL: 40,\r\n  X: 10, IX: 9, V: 5, IV: 4, I: 1,\r\n};\r\n\r\nconst alphabet = {\r\n  1: 'A', 2: 'B', 3: 'C', 4: 'D', 5: 'E', 6: 'F', 7: 'G', 8: 'H', 9: 'I', 10: 'J',\r\n  11: 'K', 12: 'L', 13: 'M', 14: 'N', 15: 'O', 16: 'P', 17: 'Q', 18: 'R', 19: 'S',\r\n  20: 'T', 21: 'U', 22: 'V', 23: 'W', 24: 'X', 25: 'Y', 26: 'Z'\r\n};\r\n\r\nexport function romanize (index) {\r\n  let num = index + 1;\r\n  let roman = '';\r\n  Object.entries(romanNumeralLookup).forEach(([k, value]) => {\r\n    while (num >= value) {\r\n      roman += k;\r\n      num -= value;\r\n    }\r\n  });\r\n  return roman;\r\n}\r\n\r\nexport function getIndexFunction (group) {\r\n  if (group.indexPattern) {\r\n    return group.indexPattern;\r\n  }\r\n\r\n  if (group.indexType === 'romanNumeral') {\r\n    return romanize;\r\n  }\r\n\r\n  if (group.indexType === 'alphabet') {\r\n    return (index) => alphabet[index + 1];\r\n  }\r\n\r\n  return i => i + 1;\r\n}\r\n\r\nexport function mapToTableCells (columnConfigs: TableColumnConfigurations[], item) {\r\n  const row = [];\r\n\r\n  columnConfigs.forEach(({prop, link, map: _map}) => {\r\n    const result: any = {};\r\n    result.value = _map\r\n      ? _map(item[prop])\r\n      : item[prop];\r\n\r\n    if (link) {\r\n      result.url = link(item);\r\n    }\r\n    row.push(result);\r\n  });\r\n  return row;\r\n}\r\n","import { tableActions } from './table-actions';\r\nimport { TableActionConfiguration, TableColumnConfigurations, TableIndexConfiguration, TableRowGroupsConfiguration } from './table.models';\r\n\r\nexport const DEFAULT_CONFIGS = {\r\n  column: {\r\n    dataType: 'text',\r\n    editable: false,\r\n    subHeaderClass: 'text-center font-italic',\r\n  } as Partial<TableColumnConfigurations>,\r\n  action: {\r\n    show: true,\r\n    types: tableActions,\r\n    class: 'fix-w-50 text-center',\r\n    static: [],\r\n  } as Partial<TableActionConfiguration>,\r\n  index: {\r\n    show: true,\r\n    class: 'text-center fix-w-40',\r\n    subHeaderClass: 'text-center font-italic fix-w-40'\r\n  } as Partial<TableIndexConfiguration>,\r\n  rowGroup: {\r\n    orders: 'asc',\r\n    namespan: 1,\r\n  } as Partial<TableRowGroupsConfiguration>,\r\n  editing: {\r\n    enabled: true,\r\n    allowAdding: false,\r\n    generateIdentifier: false,\r\n  },\r\n  paging: {\r\n    enabled: false,\r\n    metadata: false,\r\n    totalRecords: 1,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    onPageChanged: () => {}\r\n  },\r\n  rowIdentifier: 'id'\r\n};\r\n","import { TableConfigs } from '../table.models';\r\n\r\nconst getRange = (formula: string) => {\r\n  formula.substring(\r\n    formula.indexOf('['),\r\n    formula.indexOf(']'),\r\n  );\r\n}\r\n\r\nexport class FormulaParser {\r\n\r\n  public readonly symbolMap: { [p: string]: string };\r\n  public readonly descriptorMap: { [p: string]: string };\r\n\r\n  public readonly formulas: string[];\r\n  public readonly statics: string[];\r\n\r\n  private formulasAndReplacers: any[];\r\n\r\n  // TODO: formulas should have priority so we know what will have higher order than other\r\n  // TODO: formulas should have static formula so any static formula will have higher priority than other\r\n  constructor (private _configs: TableConfigs) {\r\n    this.symbolMap = this.descriptorToSymbol(_configs.columns);\r\n    this.descriptorMap = this.flip(this.symbolMap);\r\n    this.formulasAndReplacers = this.replacePropWithSymbols(_configs.formulas.all, this.symbolMap);\r\n    this.formulas = this.formulasAndReplacers.map(r => r.formula);\r\n  }\r\n\r\n  getFormulaForColumn(column: number) {\r\n    return this.formulas.find(formula => {\r\n      return formula.includes('x' + column);\r\n    });\r\n  }\r\n\r\n  getReplacersForFormula(formula: string) {\r\n    return this.formulasAndReplacers.find(item => item.formula === formula).replacers;\r\n  }\r\n\r\n  private replacePropWithSymbols (formulas: { expression: string }[], symbolMap) {\r\n    return formulas.map(formula => {\r\n      let newFormula = formula.expression;\r\n      const replacers = [];\r\n      Object.entries(symbolMap).forEach(([prop, symbol]: [string, string]) => {\r\n        const forReplace = newFormula.replace(prop, symbol);\r\n        if (forReplace !== newFormula) {\r\n          replacers.push(prop);\r\n        }\r\n        newFormula = forReplace;\r\n      });\r\n      return {\r\n        formula: newFormula,\r\n        replacers,\r\n      };\r\n    });\r\n  }\r\n\r\n  private flip (object) {\r\n    const result = {};\r\n    Object.entries(object).forEach(([key, value]: [string, string]) => {\r\n      result[value] = key;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private descriptorToSymbol (descriptors: any[]) {\r\n    return descriptors.reduce((prev, current, index) => {\r\n      prev[current.prop] = 'x' + index;\r\n      return prev;\r\n    }, {});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TableConfigurations } from './table-configurations';\r\nimport { TableConfigs, TableData } from '@app/table';\r\n\r\n@Injectable()\r\nexport class NgTableState {\r\n\r\n  configurations: TableConfigurations;\r\n  data: TableData;\r\n\r\n  isEditing: boolean;\r\n\r\n  constructor () {\r\n  }\r\n\r\n  get configStates(): TableConfigs {\r\n    return this.configurations.states;\r\n  }\r\n\r\n  get showIndex() {\r\n    return this.configurations.states.index.show;\r\n  }\r\n\r\n  get showActions() {\r\n    return this.configurations.states.actions.length > 0;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'dateToString' })\r\nexport class DateToStringPipe implements PipeTransform {\r\n\r\n  transform(value: Date, args?: any): any {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n\r\n    const date = value.getDate() < 10 ? `0${value.getDate()}` : value.getDate();\r\n    let month = value.getMonth() + 1;\r\n    const _month = month < 10 ? `0${month}` : month;\r\n    return `${date}/${_month}/${value.getFullYear()}`;\r\n  }\r\n\r\n}\r\n\r\n@Pipe({ name: 'stringToDate' })\r\nexport class StringToDatePipe implements PipeTransform {\r\n\r\n  transform(value: string, args?: any): any {\r\n    const [day, month, year] = value.split('/').map(part => parseInt(part, 10));\r\n    return new Date(year, month - 1, day);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'prependZero'\r\n})\r\nexport class PrependZeroPipe implements PipeTransform {\r\n\r\n  transform(value: number | string, args?: any): any {\r\n    value = typeof value === 'string' ? parseInt(value, 10) : value;\r\n    return value < 10 ? '0' + value : value;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'vnd',\r\n  pure: true\r\n})\r\nexport class VndCurrencyPipe implements PipeTransform {\r\n  transform (value: number, ...args: any[]): any {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n\r\n    const numberString = value.toString().replace('.', ',');\r\n    const parts = numberString.split(',');\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n    return parts.join(',');\r\n  }\r\n}\r\n","export const tableActions = {\r\n  edit: {\r\n    icon: 'fa fa-pencil-square-o',\r\n    name: 'Sửa'\r\n  },\r\n  delete: {\r\n    icon: 'fa fa-remove text-danger',\r\n    name: 'Xóa'\r\n  },\r\n  search: {\r\n    icon: 'fa fa-search',\r\n    name: 'Tìm kiếm'\r\n  },\r\n  download: {\r\n    icon: 'fa fa-download',\r\n    name: 'Download'\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TableCellForAddingComponent } from './table-cell-for-adding.component';\r\n\r\nconst log = (...message) => console.log('AddingService', ...message);\r\n\r\n@Injectable()\r\nexport class AddingCellService {\r\n\r\n  private activatedCell$ = new BehaviorSubject<TableCellForAddingComponent | null>(null);\r\n  private activatedCellObs$ = this.activatedCell$.asObservable();\r\n\r\n  constructor () {\r\n  }\r\n\r\n  setActive(cell: TableCellForAddingComponent) {\r\n    if (cell === this.activatedCell$.getValue()) {\r\n      return;\r\n    }\r\n\r\n    this.activatedCell$.next(cell);\r\n  }\r\n\r\n  setDeactive(cell) {\r\n    if (this.activatedCell$.getValue() === cell) {\r\n      this.activatedCell$.next(null);\r\n    }\r\n  }\r\n\r\n  get activeCell() {\r\n    return this.activatedCellObs$;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TableCellForAddingComponent } from './table-cell-for-adding.component';\r\nimport { AddingCellService } from './adding-cell.service';\r\nimport { pairwise } from 'rxjs/operators';\r\n\r\ntype CellOrNull =  TableCellForAddingComponent | null;\r\n\r\n@Injectable()\r\nexport class AddingDataService {\r\n  public addingRowData: any = {};\r\n  public readonly formControl = new FormControl();\r\n\r\n  constructor (private _addingCellService: AddingCellService) {\r\n    _addingCellService.activeCell.pipe(pairwise()).subscribe(([prev, current]: [CellOrNull, CellOrNull]) => {\r\n      if (prev !== current) {\r\n        if (prev !== null) {\r\n          this.saveEditedValue(prev);\r\n        }\r\n\r\n        this.formControl.reset(null, { emitEvent: false });\r\n      }\r\n\r\n      if (current) {\r\n        Promise.resolve().then(() => this.formControl.setValue(current.data));\r\n      }\r\n    });\r\n  }\r\n\r\n  saveEditedValue (cell: TableCellForAddingComponent) {\r\n    this.addingRowData[cell.columnConfigs.prop] = this.formControl.value;\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"columnConfigs.dataType !== 'checkbox'\">\r\n  <ng-container *ngIf=\"active\">\r\n    <ng-container *ngTemplateOutlet=\"input\"></ng-container>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!active\">\r\n    <ng-container [ngSwitch]=\"columnConfigs.dataType\">\r\n      <ng-container *ngSwitchCase=\"'select'\">\r\n        {{ columnConfigs['$$options'][data] }}\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'date'\">\r\n        {{ data | dateToString }}\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'currency'\">\r\n        {{ data | vnd }}\r\n      </ng-container>\r\n      <ng-container *ngSwitchDefault>\r\n        {{ data }}\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n</div>\r\n\r\n<!--<div *ngIf=\"columnConfigs.dataType === 'checkbox'\">-->\r\n  <!--<ng-container *ngIf=\"active\">-->\r\n    <!--<ng-container *ngTemplateOutlet=\"input\"></ng-container>-->\r\n  <!--</ng-container>-->\r\n  <!--<ng-container *ngIf=\"!active\">-->\r\n    <!--<i class=\"fa fa-check\" *ngIf=\"data\"></i>-->\r\n  <!--</ng-container>-->\r\n<!--</div>-->\r\n\r\n<ng-template #input>\r\n  <common-input [formControl]=\"formControl\"\r\n                [type]=\"columnConfigs.dataType\"\r\n                [data]=\"{ 'options': options }\"\r\n                (blur)=\"onBlurred($event)\"\r\n                (keyup.out-zone)=\"onKeyUp($event)\"\r\n                stopPropagation\r\n  ></common-input>\r\n</ng-template>","import { Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { TableColumnConfigurations } from '../table.models';\r\nimport { AddingCellService } from './adding-cell.service';\r\nimport { AddingDataService } from './adding-data.service';\r\n\r\n@Component({\r\n  selector: '[table-cell-adding]',\r\n  templateUrl: './table-cell-for-adding.component.html',\r\n  styleUrls: ['./table-cell-for-adding.component.scss']\r\n})\r\nexport class TableCellForAddingComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() columnConfigs: TableColumnConfigurations;\r\n  @Input() column: number;\r\n\r\n  @Input()\r\n  get active (): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  set active (value: boolean) {\r\n    this._active = value;\r\n    if (this._active) {\r\n      Promise.resolve().then(() => {\r\n        let elementToFocus;\r\n\r\n        if (this.columnConfigs.dataType === 'select') {\r\n          elementToFocus = this._elementRef.nativeElement.querySelector('select');\r\n        } else {\r\n          elementToFocus = this._elementRef.nativeElement.querySelector('input');\r\n        }\r\n\r\n        if (elementToFocus) {\r\n          elementToFocus.focus();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _active: boolean;\r\n\r\n  constructor (private _addingCellService: AddingCellService,\r\n               private _addingDataService: AddingDataService,\r\n               private _elementRef: ElementRef,\r\n  ) { }\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n  }\r\n\r\n  @HostListener('click.out-zone')\r\n  click() {\r\n    this._addingCellService.setActive(this);\r\n  }\r\n\r\n  onKeyUp ({keyCode}: KeyboardEvent) {\r\n    if (keyCode === 13) { // enter key\r\n      this._addingDataService.saveEditedValue(this);\r\n    }\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get cellClass() {\r\n    const defaultClass = this.getDefaultClassBasedOnType();\r\n    return (this.columnConfigs.dataClass || '') + ' ' + defaultClass;\r\n  }\r\n\r\n  onBlurred () {\r\n    this._addingCellService.setDeactive(this);\r\n  }\r\n\r\n  get formControl() {\r\n    return this._addingDataService.formControl;\r\n  }\r\n\r\n  get options() {\r\n    return this.columnConfigs.options;\r\n  }\r\n\r\n  get data() {\r\n    return this._addingDataService.addingRowData[this.columnConfigs.prop];\r\n  }\r\n\r\n  private getDefaultClassBasedOnType() {\r\n    const dataType = this.columnConfigs.dataType;\r\n    if (dataType === 'date') {\r\n      return 'text-center';\r\n    }\r\n\r\n    if (['number', 'currency'].includes(dataType)) {\r\n      return 'text-right';\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { createAddress, getLocation, getLocationFromStringLocator } from './cell-manager.utils';\r\nimport { TableCellComponent } from './table-cell.component';\r\n\r\nconst log = (...message) => console.log('CellManager', ...message);\r\n\r\nexport const returnOutside = (fn): Observable<any> => {\r\n  return new Observable(observer => {\r\n    Promise.resolve().then(() => { // this is a trick to push the code to the event loop\r\n      observer.next(fn());\r\n      observer.complete();\r\n    });\r\n  });\r\n};\r\n\r\ninterface Location {\r\n  row: number;\r\n  column: number;\r\n}\r\n\r\n@Injectable()\r\nexport class CellManager {\r\n\r\n  private _addressCellMap = new Map<string, TableCellComponent>();\r\n  private _cellAddressMap = new Map<TableCellComponent, string>();\r\n  private _groupCellsMap = new Map<string, TableCellComponent[]>();\r\n\r\n  constructor () { }\r\n\r\n  register (cell: TableCellComponent) {\r\n    const address = createAddress(cell.row, cell.column, cell.group);\r\n    this._addressCellMap.set(address, cell);\r\n    this._cellAddressMap.set(cell, address);\r\n\r\n    if (cell.group) {\r\n      const cells = this._groupCellsMap.has(cell.group.path) ? this._groupCellsMap.get(cell.group.path) : [];\r\n      cells.push(cell);\r\n      this._groupCellsMap.set(cell.group.path, cells);\r\n    }\r\n  }\r\n\r\n  unregister(cell: TableCellComponent) {\r\n    this._cellAddressMap.delete(cell);\r\n    this._addressCellMap.delete(createAddress(cell.row, cell.column));\r\n  }\r\n\r\n  detectChanges(location: Location) {\r\n    this.getCell(location).subscribe(cell => {\r\n      cell.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  getCell (locationOrAddress: Location | string): Observable<TableCellComponent> {\r\n    if (typeof locationOrAddress !== 'string') {\r\n      locationOrAddress = createAddress(locationOrAddress.row, locationOrAddress.column);\r\n    }\r\n\r\n    return returnOutside(() => this._addressCellMap.get(locationOrAddress as string));\r\n  }\r\n\r\n  getCellsInRow (row: number, group?): Observable<TableCellComponent[]> {\r\n    return returnOutside(() => {\r\n      const results = [];\r\n      const pushToResults = (rowIndex, cell) => {\r\n        if (cell.row === row) {\r\n          results.push(cell);\r\n        }\r\n      };\r\n      if (group) {\r\n        this._groupCellsMap.get(group.path).forEach(cell => pushToResults(row, cell));\r\n      } else {\r\n        this._addressCellMap.forEach(cell => pushToResults(row, cell));\r\n      }\r\n      return results;\r\n    });\r\n  }\r\n\r\n  getCellsInColumn(column: number): Observable<TableCellComponent[]> {\r\n    return returnOutside(() => {\r\n      const results = [];\r\n      this._addressCellMap.forEach((value, key) => {\r\n        const { column: currentColumn } = getLocation(key);\r\n        if (column === currentColumn) {\r\n          results.push(value);\r\n        }\r\n      });\r\n      return results;\r\n    });\r\n  }\r\n\r\n  // TODO: This could be optimize by caching the address then just pick whatever the address we need\r\n  getCellsInArea(start: string, end: string): Observable<TableCellComponent[]> {\r\n    const startLocation = getLocationFromStringLocator(start);\r\n    const endLocation = getLocationFromStringLocator(end);\r\n    const largestRow = Math.max(startLocation.row, endLocation.row);\r\n    const largestColumn = Math.max(startLocation.column, endLocation.column);\r\n    const smallestRow = Math.min(startLocation.row, endLocation.row);\r\n    const smallestColumn = Math.min(startLocation.column, endLocation.column);\r\n\r\n    return returnOutside(() => {\r\n      const results = [];\r\n      this._addressCellMap.forEach((value, key) => {\r\n        const { row, column } = value;\r\n        if (row <= largestRow && row >= smallestRow && column <= largestColumn && column >= smallestColumn) {\r\n          results.push(value);\r\n        }\r\n      });\r\n      return results;\r\n    });\r\n  }\r\n\r\n}\r\n","const wordMapper = {\r\n  A: 0, B: 1, C: 2, D: 3, E: 4, F: 5, G: 6, H: 7, I: 8, K: 9, L: 10,\r\n  M: 11, N: 12, O: 13, P: 14, Q: 15, R: 16, S: 17, T: 18, U: 19, V: 20, W: 21, X: 22, Y: 23, Z: 24\r\n};\r\n\r\nexport const createAddress = (row, column, group?): string => group ? row + '_' + column + '_{' + group.path + '}' : row + '_' + column;\r\n\r\nexport const getLocation = (address: string): { row: number, column: number, groupPath?: string } => {\r\n  const [row, column, groupPath] = address.split('_');\r\n  return {\r\n    row: +row,\r\n    column: +column,\r\n    ...groupPath ? { groupPath: extractGroupPath(groupPath) } : {},\r\n  };\r\n};\r\n\r\nexport const extractGroupPath = (str: string) => {\r\n  const first = str.indexOf('{');\r\n  const last = str.indexOf('}');\r\n  return str.substring(first, last);\r\n};\r\n\r\nexport const createAddressFromStringLocator = (str: string) => {\r\n  const [word, row] = str.split('.');\r\n  const col = wordMapper[word];\r\n  return createAddress(row, col);\r\n};\r\n\r\nexport const getLocationFromStringLocator = (str: string) => {\r\n  return getLocation(createAddressFromStringLocator(str));\r\n};\r\n\r\nfunction area (start: string, end: string, array: string[]) {\r\n  const startLocation = getLocation(start);\r\n  const endLocation = getLocation(end);\r\n  const largestRow = Math.max(startLocation.row, endLocation.row);\r\n  const largestColumn = Math.max(startLocation.column, endLocation.column);\r\n  const smallestRow = Math.min(startLocation.row, endLocation.row);\r\n  const smallestColumn = Math.min(startLocation.column, endLocation.column);\r\n\r\n  return array.filter(address => {\r\n    const { row, column } = getLocation(address);\r\n    return row <= largestRow && row >= smallestRow && column <= largestColumn && column >= smallestColumn;\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { TableCellComponent } from './table-cell.component';\r\nimport { TableDataService } from '../data/table-data.service';\r\n\r\n@Injectable()\r\nexport class CellService {\r\n\r\n  private active$ = new BehaviorSubject(null);\r\n  private activeObservable = this.active$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  public readonly formControl = new FormControl();\r\n\r\n  constructor (private dataService: TableDataService) {\r\n  }\r\n\r\n  saveEditedValue() {\r\n    const cell = this.active$.getValue();\r\n\r\n    if (!cell) {\r\n      return;\r\n    }\r\n\r\n    if (cell.data === this.formControl.value) {\r\n      return;\r\n    }\r\n\r\n    this.dataService.setValue(\r\n      cell.row,\r\n      cell.column,\r\n      cell.group,\r\n      this.formControl.value,\r\n    );\r\n  }\r\n\r\n  setActive (cell: TableCellComponent | null) {\r\n    this.saveEditedValue();\r\n    this.active$.next(cell);\r\n    this.formControl.reset(null, {emitEvent: false});\r\n    if (cell) {\r\n      Promise.resolve().then(() => {\r\n        this.formControl.setValue(this.dataService.getValue(cell.row, cell.column, cell.group), { emitEvent: false });\r\n      });\r\n    }\r\n  }\r\n\r\n  getActive () {\r\n    return this.activeObservable;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"columnConfigs.dataType !== 'checkbox'\">\r\n  <ng-container *ngIf=\"active\">\r\n    <ng-container *ngTemplateOutlet=\"input\"></ng-container>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!active\">\r\n    <data-only-cell [columnConfigs]=\"columnConfigs\" [cellData]=\"cell\"></data-only-cell>\r\n  </ng-container>\r\n</div>\r\n\r\n<div *ngIf=\"columnConfigs.dataType === 'checkbox'\">\r\n  <ng-container *ngIf=\"active\">\r\n    <ng-container *ngTemplateOutlet=\"input\"></ng-container>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!active\">\r\n    <i class=\"fa fa-check\" *ngIf=\"data\"></i>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #input>\r\n  <common-input [formControl]=\"formControl\"\r\n                [type]=\"columnConfigs.dataType\"\r\n                [data]=\"{ 'options': options }\"\r\n                (blur)=\"onBlurred($event)\"\r\n                (keyup.out-zone)=\"onKeyUp($event)\"\r\n                stopPropagation\r\n  ></common-input>\r\n</ng-template>\r\n","/* tslint:disable:component-selector */\r\nimport { ChangeDetectorRef, Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { TableDataService } from '../data/table-data.service';\r\nimport { createAddress } from './cell-manager.utils';\r\nimport { CellManager } from './cell-manager.service';\r\nimport { CellService } from './cell.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { intersectionBy } from 'lodash';\r\nimport { TableColumnConfigurations } from '../table.models';\r\n\r\nconst log = (...message) => console.log('TableCellComponent', ...message);\r\n\r\n@Component({\r\n  selector: '[table-cell]',\r\n  templateUrl: './table-cell.component.html',\r\n  styleUrls: ['./table-cell.component.scss']\r\n})\r\nexport class TableCellComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() row: number;\r\n  @Input() column: number;\r\n  @Input() group: any;\r\n\r\n  @Input() columnWord: string;\r\n  @Input() wordAddress: string;\r\n\r\n  @Input() columnConfigs: TableColumnConfigurations;\r\n  @Input() readonly = false;\r\n\r\n  public prop: string;\r\n  public active = false;\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor (public cd: ChangeDetectorRef,\r\n               private _cellService: CellService,\r\n               private _cellManager: CellManager,\r\n               private _dataService: TableDataService,\r\n               private _elementRef: ElementRef,\r\n  ) {\r\n    (this._dataService as any)['_cellService'] = _cellService; // this is a hack for circular dependency\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.prop = this.columnConfigs.prop as string;\r\n\r\n    this._cellManager.register(this);\r\n    this.subscription = this._cellService.getActive().pipe(map(active => active === this))\r\n      .subscribe(active => {\r\n        this.active = active;\r\n        this.cd.detectChanges();\r\n        if (active) {\r\n          let elementToFocus;\r\n\r\n          if (this.columnConfigs.dataType === 'select') {\r\n            elementToFocus = this._elementRef.nativeElement.querySelector('select');\r\n          } else {\r\n            elementToFocus = this._elementRef.nativeElement.querySelector('input');\r\n          }\r\n\r\n          if (elementToFocus) {\r\n            elementToFocus.focus();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    this._cellManager.unregister(this);\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  @HostListener('click.out-zone')\r\n  onClicked() {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    if (!this.columnConfigs.editable) {\r\n      this._cellService.setActive(null);\r\n      return;\r\n    }\r\n\r\n    if (this.columnConfigs.editableWhen && this.columnConfigs.editableWhen(this.entireRow)) {\r\n      this._cellService.setActive(this);\r\n      return;\r\n    }\r\n\r\n    this._cellService.setActive(this);\r\n  }\r\n\r\n  onBlurred () {\r\n    this._cellService.setActive(null);\r\n  }\r\n\r\n  onKeyUp ({keyCode}: KeyboardEvent) {\r\n    if (keyCode === 13) { // enter key\r\n      this._cellService.saveEditedValue();\r\n    }\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get cellClass() {\r\n    const defaultClass = this.getDefaultClassBasedOnType();\r\n    return (this.columnConfigs.dataClass || '') + ' ' + defaultClass;\r\n  }\r\n\r\n  get options() {\r\n    if (!this.columnConfigs.partialOptions) {\r\n      return this.columnConfigs.options;\r\n    }\r\n\r\n    const ids = this.columnConfigs.partialOptions(this.entireRow).map(i => ({id: i}));\r\n\r\n    return intersectionBy(this.columnConfigs.options, ids, 'id');\r\n  }\r\n\r\n  get entireRow() {\r\n    return this._dataService.getRow(this.row, this.group);\r\n  }\r\n\r\n  get address () {\r\n    return createAddress(this.row, this.column);\r\n  }\r\n\r\n  get formControl() {\r\n    return this._cellService.formControl;\r\n  }\r\n\r\n  get dataChanges() {\r\n    return this._dataService.changes(this.row, this.column, this.group);\r\n  }\r\n\r\n  get data () {\r\n    return this._dataService.getValue(this.row, this.column, this.group);\r\n  }\r\n\r\n  get cell() {\r\n    return this._dataService.getCell(this.row, this.column, this.group);\r\n  }\r\n\r\n  private getDefaultClassBasedOnType() {\r\n    const dataType = this.columnConfigs.dataType;\r\n    if (dataType === 'date') {\r\n      return 'text-center';\r\n    }\r\n\r\n    if (['number', 'currency'].includes(dataType)) {\r\n      return 'text-right';\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { cloneDeep, initial, isNil, last, merge, remove, set } from 'lodash';\r\nimport { Subject } from 'rxjs';\r\nimport { TableColumnGroupsConfiguration, TableConfigs } from './table.models';\r\nimport { DEFAULT_CONFIGS } from './default-configs';\r\n\r\ntype ColumnIndex = number;\r\ntype ColumnName = string;\r\n\r\ninterface ConfigSetterOptions {\r\n  detect?: boolean;\r\n  emmitEvent?: boolean;\r\n  type?: string;\r\n}\r\n\r\nconst defaultSetterOptions: ConfigSetterOptions = {\r\n  detect: true,\r\n  emmitEvent: true,\r\n  type: 'table'\r\n};\r\n\r\nexport class TableConfigurations {\r\n  public readonly states: TableConfigs;\r\n\r\n  public readonly hiddenActions = new Map();\r\n  public hasSubHeader = false;\r\n\r\n  private _cd: ChangeDetectorRef;\r\n  private _headerCd: ChangeDetectorRef;\r\n\r\n  private _changes = new Subject();\r\n  private _changeObs =  this._changes.asObservable();\r\n\r\n  constructor (private initialConfigs: TableConfigs) { // TODO: Add type to this\r\n    const initial = cloneDeep(this.initialConfigs);\r\n    this.states = this.mergeDefaultConfigs(initial);\r\n  }\r\n\r\n  // -- columns configs\r\n  renameColumn(columnIndex: number, newName: string) {\r\n    this.set(`columns[${columnIndex}].name`, newName, {\r\n      type: 'header'\r\n    });\r\n  }\r\n\r\n  renameColumns(...columns: [ColumnIndex, ColumnName][]) {\r\n    const batches = columns.map(([index, name]) => [`columns[${index}].name`, name]);\r\n    this.setBatches(batches, 'header');\r\n  }\r\n\r\n  setOptions(columnIndex: number, newOptions: any[]) {\r\n    const column = this.states.columns[columnIndex];\r\n    column.options = newOptions;\r\n    column['$$options'] = this.createIdToValueMap(newOptions);\r\n\r\n    this.detectChanges();\r\n  }\r\n\r\n  // -- columns groups\r\n  /**\r\n   * @deprecated use renameColumnGroupById instead\r\n   * @param path\r\n   * @param newName\r\n   */\r\n  renameGroup(path: string, newName: string) {\r\n    this.set('columnGroups' + path, newName, {\r\n      type: 'header'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated use renameColumnGroupsById\r\n   * @param groups\r\n   */\r\n  renameGroups(...groups: [string, string][]) {\r\n    const newGroupNames = groups.map(([path, newName]) => ['columnGroups' + path, newName]);\r\n    this.setBatches(newGroupNames, 'header');\r\n  }\r\n\r\n  renameColumnGroupById(id: any, newName: string) {\r\n    const foundGroup = this.findGroupById(this.states.columnGroups, id);\r\n    if (foundGroup) {\r\n      this.setRaw(foundGroup, 'groupName', newName, {\r\n        type: 'header'\r\n      });\r\n    }\r\n  }\r\n\r\n  renameColumnGroupsById(...groups: [any, string][]) {\r\n    const ids = groups.map(([id]) => id);\r\n    const batches = this.findGroupByIds(this.states.columnGroups, ids).map(([id, group]) => {\r\n      const [gId, gName] = groups.find(([gId]) => gId === id);\r\n      return [group, 'groupName', gName];\r\n    });\r\n    console.log(batches);\r\n    if (batches.length) {\r\n      this.setBatchesRaw(batches, 'header');\r\n    }\r\n  }\r\n\r\n  // -- actions configs\r\n  hideActionType(typeToHide: string, actionIndex: number = 0) {\r\n    if (!this.states.actions[actionIndex]) {\r\n      return false;\r\n    }\r\n\r\n    const array = this.getHiddenArray(actionIndex);\r\n    const foundTypeToHide = array.find(i => i === typeToHide);\r\n\r\n    if (foundTypeToHide) {\r\n      return false;\r\n    }\r\n\r\n    array.push(typeToHide);\r\n    this.detectChanges();\r\n    return true;\r\n  }\r\n\r\n  showActionType(typeToShow: string, actionIndex: number = 0) {\r\n    if (!this.states.actions[actionIndex]) {\r\n      return false;\r\n    }\r\n\r\n    const array: string[] = this.getHiddenArray(actionIndex);\r\n    const foundTypeToShowIndex = array.findIndex(i => i === typeToShow);\r\n    if (foundTypeToShowIndex < 0) {\r\n      return false;\r\n    }\r\n\r\n    array.splice(foundTypeToShowIndex, 1);\r\n    this.detectChanges();\r\n    return true;\r\n  }\r\n\r\n  // -- editing configs\r\n  setEditing(enabled: boolean) {\r\n    this.set('editing.enabled', enabled);\r\n  }\r\n\r\n  // -- paging configs\r\n\r\n  /**\r\n   * This method will not emit back to the onPageChanged, only reflects to the view\r\n   */\r\n  setPage({ pageNumber, pageSize }: { pageNumber?: number, pageSize?: number }) {\r\n    const noTrigger: ConfigSetterOptions = { detect: false, emmitEvent: false };\r\n\r\n    if (!isNil(pageSize)) {\r\n      this.set('paging.pageSize', pageSize, noTrigger);\r\n      this.set('paging.pageNumber', 1, noTrigger);\r\n    }\r\n\r\n    if (!isNil(pageNumber)) {\r\n      this.set('paging.pageNumber', pageNumber, noTrigger);\r\n    }\r\n\r\n    this.detectChanges();\r\n  }\r\n\r\n  setTotalRecords(totalRecords) {\r\n    if (isNil(totalRecords)) {\r\n      return;\r\n    }\r\n\r\n    this.set('paging.totalRecords', totalRecords);\r\n  }\r\n\r\n  private mergeDefaultConfigs(initialConfig: TableConfigs): TableConfigs {\r\n    const mergedConfigs: TableConfigs | any = {};\r\n\r\n    mergedConfigs.columns = (initialConfig.columns || []).map(col => {\r\n      if (col.subHeader) {\r\n        this.hasSubHeader = true;\r\n      }\r\n      const newCol = Object.assign({...DEFAULT_CONFIGS.column}, col);\r\n\r\n      if (newCol.options) {\r\n        newCol['$$options'] = this.createIdToValueMap(newCol.options);\r\n      }\r\n\r\n      if (newCol.dataType === 'link' && newCol.link) {\r\n        newCol.useRouter = isNil(col.useRouter) ? false : col.useRouter;\r\n      }\r\n\r\n      return newCol;\r\n    });\r\n\r\n    if (initialConfig.columnGroups) {\r\n      mergedConfigs.columnGroups = initialConfig.columnGroups;\r\n    }\r\n\r\n    if (initialConfig.rowGroups) {\r\n      mergedConfigs.rowGroups = initialConfig.rowGroups.map(i => {\r\n        const newRowGroups = Object.assign({ ...DEFAULT_CONFIGS.rowGroup }, i);\r\n\r\n        let actions;\r\n        if (i.actions) {\r\n          actions = i.actions.map(action => Object.assign({ ...DEFAULT_CONFIGS.action }, action));\r\n          newRowGroups.actions = actions;\r\n        }\r\n\r\n        return newRowGroups;\r\n      });\r\n    }\r\n\r\n    if (initialConfig.formulas) {\r\n      mergedConfigs.formulas = Object.assign({}, initialConfig.formulas);\r\n    }\r\n\r\n    mergedConfigs.editing = Object.assign({...DEFAULT_CONFIGS.editing}, initialConfig.editing);\r\n\r\n    mergedConfigs.rowIdentifier = initialConfig.rowIdentifier || DEFAULT_CONFIGS.rowIdentifier;\r\n\r\n    mergedConfigs.index = Object.assign({...DEFAULT_CONFIGS.index}, initialConfig.index);\r\n\r\n    mergedConfigs.actions = (initialConfig.actions || []).map(action => {\r\n      return Object.assign({...DEFAULT_CONFIGS.action}, action);\r\n    });\r\n\r\n    mergedConfigs.paging = Object.assign({...DEFAULT_CONFIGS.paging}, initialConfig.paging);\r\n\r\n    return mergedConfigs;\r\n  }\r\n\r\n  private createIdToValueMap(options) {\r\n    return options.reduce((prev, current) => {\r\n      prev[current.id] = current.value;\r\n      return prev;\r\n    }, {});\r\n  }\r\n\r\n  private detectChanges(type: 'table' | 'header' = 'table') {\r\n    const detector: ChangeDetectorRef = type === 'table' ? this._cd\r\n      : type === 'header' ? this._headerCd\r\n      : undefined;\r\n\r\n    if (detector) {\r\n      detector.markForCheck();\r\n      return;\r\n    }\r\n\r\n    Promise.resolve().then(() => {\r\n      if (detector) {\r\n        detector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private getHiddenArray(actionIndex): string[] {\r\n    const action = this.states.actions[actionIndex];\r\n    return this.hiddenActions.get(action) || this.hiddenActions.set(action, []).get(action);\r\n  }\r\n\r\n  private findGroupById(groups: TableColumnGroupsConfiguration[], id) {\r\n    for (const group of groups) {\r\n      if (group.id === id) {\r\n        return group;\r\n      }\r\n\r\n      if (group.subGroups) {\r\n        return this.findGroupById(group.subGroups, id);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private findGroupByIds(groups: TableColumnGroupsConfiguration[], ids: any[], fresh = true) {\r\n    ids = [...ids];\r\n    const foundGroups = this.findGroupByIds['foundGroups'] = fresh ? [] : this.findGroupByIds['foundGroups'];\r\n    for (const group of groups) {\r\n      if (ids.includes(group.id)) {\r\n        foundGroups.push([group.id, group]);\r\n        remove(ids, i => i === group.id);\r\n      }\r\n\r\n      if (group.subGroups) {\r\n        this.findGroupByIds(group.subGroups, ids, false);\r\n      }\r\n    }\r\n    return foundGroups;\r\n  }\r\n\r\n  // -- setters\r\n\r\n  private set(path: string, value, options?: ConfigSetterOptions) {\r\n    this.setRaw(this.states, path, value, options);\r\n  }\r\n\r\n  private setRaw(object, path, value, options?: ConfigSetterOptions) {\r\n    options = merge({...defaultSetterOptions}, options);\r\n    set(object, path, value);\r\n\r\n    if (options.detect) {\r\n      this.detectChanges(options.type as any);\r\n    }\r\n\r\n    if (options.emmitEvent) {\r\n      this._changes.next(options.type);\r\n    }\r\n  }\r\n\r\n  private setBatches(batches: any[][], type = 'table') {\r\n    initial(batches).forEach(tx => set.apply(this, [this.states].concat(tx)));\r\n    this.set.apply(this, last(batches).concat({ type }));\r\n  }\r\n\r\n  private setBatchesRaw(batches: any[][], type = 'table') {\r\n    initial(batches).forEach(tx => set.apply(this, tx));\r\n    this.setRaw.apply(this, last(batches).concat({ type }));\r\n  }\r\n}\r\n","import { TableDataService } from './data/table-data.service';\r\nimport { TableConfigurations } from './table-configurations';\r\n\r\nconst removeMetaData = <T> (data: T[], idKey): Partial<T>[] => {\r\n  return data.map((d: any) => {\r\n    const { [idKey]: id, __generated, ...rest } = d;\r\n    return rest;\r\n  });\r\n};\r\n\r\n\r\nexport class TableData {\r\n\r\n  private _configs: TableConfigurations;\r\n  private _dataService: TableDataService;\r\n\r\n  constructor (public initialData = []) {}\r\n\r\n  getCurrentData(removeMeta = false): any[] {\r\n    if (!this._dataService) {\r\n      return this.initialData;\r\n    }\r\n\r\n    const data = this._dataService.tableDataInternal.internalData;\r\n    if (removeMeta) {\r\n      const idKey = this._configs.states.rowIdentifier;\r\n      return removeMetaData(data, idKey);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  delete(rowIndex, group?) {\r\n    this._dataService.deleteRow(rowIndex, group);\r\n  }\r\n\r\n  add(data, groupPath?) {\r\n    if (groupPath) {\r\n      // TODO: implement for group\r\n      return;\r\n    }\r\n\r\n    this._dataService.addRow(data);\r\n  }\r\n\r\n  getDeleted() {\r\n    return this._dataService.tableDataInternal.deleted;\r\n  }\r\n\r\n  getAdded (removeMeta = false) {\r\n    const data = this._dataService.tableDataInternal.internalData;\r\n    const generatedData = data.filter(d => d.__generated);\r\n    if (removeMeta) {\r\n      const idKey = this._configs.states.rowIdentifier;\r\n      return removeMetaData(generatedData, idKey);\r\n    }\r\n\r\n    return generatedData;\r\n  }\r\n\r\n}\r\n","<td class=\"group-index\">{{ group.indexFn(groupIndex, { parentIndex: parentIndex, parentText: parentText }) }}</td>\r\n<ng-container *ngFor=\"let col of columns; let colIndex = index; trackBy: trackByIndex\">\r\n  <ng-container [ngSwitch]=\"col.type\">\r\n    <ng-container *ngSwitchCase=\"'actions'\">\r\n      <td class=\"{{ col.value.class }}\">\r\n        <ng-container *ngFor=\"let action of col.value.static; let actionIndex = index\">\r\n          <i class=\"{{ col.value.types[action].icon }} cursor-pointer icon icon-{{ action }} {{ actionIndex > 0 ? 'ml-2' : '' }}\"\r\n             (click.out-zone)=\"onGroupActionClicked(action, col.value, group)\"\r\n             data-placement=\"bottom\"\r\n             data-toggle=\"tooltip\"\r\n             stopPropagation\r\n             title=\"{{ col.value.types[action].name }}\">\r\n          </i>\r\n        </ng-container>\r\n      </td>\r\n    </ng-container>\r\n    <td *ngSwitchCase=\"'name'\" [attr.colspan]=\"col.colspan\" class=\"group-name\">{{ col.value }}</td>\r\n    <td *ngSwitchDefault>{{ col.value }}</td>\r\n  </ng-container>\r\n</ng-container>\r\n","import { ChangeDetectorRef, Component, HostBinding, HostListener, Input, OnInit } from '@angular/core';\r\nimport { TableRowGroupActionsConfiguration, TableRowGroupsConfiguration } from '@app/table';\r\nimport { CellData } from '@app/table/core/data/table-data-internal';\r\nimport { TableDataService } from '@app/table/core/data/table-data.service';\r\nimport { NgTableState } from '@app/table/core/ng-table-state.service';\r\n\r\n@Component({\r\n  selector: 'tr[table-group-header]',\r\n  templateUrl: './table-group-header.component.html',\r\n  styleUrls: ['./table-group-header.component.scss']\r\n})\r\nexport class TableGroupHeaderComponent implements OnInit {\r\n\r\n  @Input() group;\r\n  @Input() groupIndex;\r\n  @Input() parentIndex;\r\n  @Input() parentText;\r\n\r\n  public columns;\r\n\r\n  private _ownData;\r\n\r\n  constructor (private _dataService: TableDataService,\r\n               private _cd: ChangeDetectorRef,\r\n               private _state: NgTableState,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit () {\r\n    this.columns = this.getGroupColumns(this.group.configs);\r\n    // this._ownData = this.getCellDataAndOriginals().data;\r\n\r\n    // this.setSummaryCell(1);\r\n\r\n    // this._dataService.allChanges().subscribe((res) => {\r\n    //   if (res.col === 1) {\r\n    //     this.setSummaryCell(1);\r\n    //     this._cd.detectChanges();\r\n    //   }\r\n    // });\r\n\r\n  }\r\n\r\n  @HostBinding('class')\r\n  get hostClass() {\r\n    return `group-level-${this.group.groupIndex + 1}`;\r\n  }\r\n\r\n  get configs() {\r\n    return this._state.configurations;\r\n  }\r\n\r\n  getGroupColumns (groupConfigs: TableRowGroupsConfiguration) {\r\n    let totalLength = this.configs.states.columns.length + this.configs.states.actions.length;\r\n    totalLength = groupConfigs.namespan > totalLength ? totalLength : totalLength - groupConfigs.namespan + 1;\r\n\r\n    const array = Array(totalLength).fill(undefined).map(() => ({\r\n      value: '',\r\n      type: '',\r\n      colspan: 1,\r\n    }) as any);\r\n\r\n    const firstRow = this.getFirstRowOfChildrenData();\r\n\r\n    const nameAtIndex = 0;\r\n    array[nameAtIndex].value = groupConfigs.name(firstRow);\r\n    array[nameAtIndex].type = 'name';\r\n    array[nameAtIndex].colspan = !groupConfigs.summaries ? groupConfigs.namespan : 1;\r\n\r\n    const actions = groupConfigs.actions;\r\n    if (actions) {\r\n      for (let i = this.configs.states.columns.length - groupConfigs.namespan + 1, j = 0; i < array.length; i++, j++) {\r\n        if (actions[j]) {\r\n          array[i].value = actions[j];\r\n          array[i].type = 'actions';\r\n        }\r\n      }\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  getCellDataAndOriginals(): { data: CellData[][], original: any[] } {\r\n    const data = [];\r\n    const originalData = [];\r\n    const fn = (_group) => {\r\n      if (_group.data) {\r\n        data.push(..._group.data);\r\n        originalData.push(..._group.originalData);\r\n      }\r\n      if (_group.subGroups) {\r\n        _group.subGroups.forEach(s => fn(s));\r\n      }\r\n    };\r\n    fn(this.group);\r\n    return {\r\n      data,\r\n      original: originalData,\r\n    };\r\n  }\r\n\r\n  getFirstRowOfChildrenData() {\r\n    let data;\r\n    const fn = (_group) => {\r\n      if (_group.data) {\r\n        data = _group.originalData[0];\r\n      }\r\n      if (_group.subGroups) {\r\n        for (const s of _group.subGroups) {\r\n          fn(s);\r\n        }\r\n      }\r\n    };\r\n    fn(this.group);\r\n    return data;\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    console.log('this', this);\r\n  }\r\n\r\n  trackByIndex (index) {\r\n    return index;\r\n  }\r\n\r\n  onGroupActionClicked (action: string, actionConfigs: TableRowGroupActionsConfiguration, group) {\r\n    const groupConfigs: TableRowGroupsConfiguration = group.configs;\r\n    if (groupConfigs.actions && actionConfigs.clicked) {\r\n      const firstRowData = this.getFirstRowOfGroup(group);\r\n      actionConfigs.clicked({\r\n        type: action,\r\n        groupBy: groupConfigs.groupBy,\r\n        firstRow: firstRowData,\r\n      });\r\n    }\r\n  }\r\n\r\n  private setSummaryCell (index) {\r\n    const data = this._ownData.map(x => x[index]).map(x => x.value).reduce((x1, x2) => x1 + x2, 0);\r\n    this.columns[index] = {\r\n      value: data,\r\n      type: 'number',\r\n      colspan: 1,\r\n    };\r\n  }\r\n\r\n  private getFirstRowOfGroup (group) {\r\n    if (group.data) {\r\n      return group.originalData[0];\r\n    }\r\n\r\n    if (group.subGroups.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return this.getFirstRowOfGroup(group.subGroups[0]);\r\n  }\r\n\r\n}\r\n","<tr class=\"text-center font-weight-bold\" *ngFor=\"let header of headers\">\r\n  <ng-container *ngFor=\"let col of header\">\r\n    <th *ngIf=\"col.length > 0\"\r\n        [class]=\"col[1]\"\r\n        [attr.rowspan]=\"col[2]\"\r\n        [attr.colspan]=\"col[3]\" [innerHTML]=\"col[0]\">\r\n    </th>\r\n  </ng-container>\r\n</tr>\r\n\r\n<tr *ngIf=\"configurations.hasSubHeader\">\r\n  <th *ngIf=\"withIndex\" [class]=\"configurations.states.index.subHeaderClass\">\r\n    {{ configurations.states.index.subHeader }}\r\n  </th>\r\n  <th *ngFor=\"let sub of subHeaders; let i = index\"\r\n      [class]=\"sub.class\">\r\n    <div>{{ sub.name }}</div>\r\n  </th>\r\n</tr>","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { buildPropToPathMap, depth as getDepth, emptyArrays, getPath, insertAt, pushEmptyArrays, totalSubGroupProps } from '../table.utils';\r\nimport { get, last } from 'lodash';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { filter } from 'rxjs/operators';\r\nimport { NgTableState } from '@app/table/core/ng-table-state.service';\r\n\r\n@Component({\r\n  selector: '[table-header]',\r\n  templateUrl: './table-header.component.html',\r\n  styleUrls: ['./table-header.component.scss']\r\n})\r\nexport class TableHeaderComponent implements OnInit {\r\n  @Input() class;\r\n\r\n  public headers;\r\n  public subHeaders;\r\n\r\n  constructor(public domSanitizer: DomSanitizer,\r\n              public state: NgTableState,\r\n              private _cd: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.configurations['_headerCd'] = this._cd;\r\n\r\n    this.headers = this.buildHeaders();\r\n\r\n    if (this.configurations.hasSubHeader) {\r\n      this.subHeaders = this.buildSubHeaders();\r\n    }\r\n\r\n    this.watchConfigsChanges();\r\n  }\r\n\r\n  get indexClass() {\r\n    return this.state.configurations.states.index.class;\r\n  }\r\n\r\n  get withIndex() {\r\n    return this.state.showIndex;\r\n  }\r\n\r\n  get withActions() {\r\n    return this.state.showActions;\r\n  }\r\n\r\n  get actions() {\r\n    if (!this.withActions) {\r\n      return [];\r\n    }\r\n\r\n    return this.state.configurations.states.actions || [];\r\n  }\r\n\r\n  get configurations() {\r\n    return this.state.configurations;\r\n  }\r\n\r\n  get indexName() {\r\n    const indexConfigs = this.configurations.states.index;\r\n    return indexConfigs ? indexConfigs.name || 'STT' : 'STT';\r\n  }\r\n\r\n  /**\r\n   * This also build another matrix for the table header\r\n   */\r\n  private buildHeaders () {\r\n    const colGroups = this.configurations.states.columnGroups;\r\n    const columnConfigs = this.configurations.states.columns;\r\n\r\n    const isValidColGroupsInput = (colGroups || []).length !== 0;\r\n    if (!isValidColGroupsInput) {\r\n      const headers = columnConfigs\r\n        .map(column => ([this.domSanitizer.bypassSecurityTrustHtml(column.name), column.headerClass, 1, 1]));\r\n\r\n      if (this.withIndex) {\r\n        headers.unshift([this.indexName, this.indexClass, 1, 1]);\r\n      }\r\n\r\n      if (this.withActions && this.actions.length > 0) {\r\n        this.actions.forEach(action => {\r\n          headers.push([action.name, action.class || [], 1, 1]);\r\n        });\r\n      }\r\n\r\n      return [headers];\r\n    }\r\n\r\n    const propToGroupIndexMap: any = buildPropToPathMap(colGroups);\r\n\r\n    /*\r\n      groupNames should have a structure like this\r\n      [\r\n         [ {name, class},\r\n           {name, class},\r\n           [{ name, class}, {name, class}, '0.0']\r\n           0],\r\n         {name, class},\r\n         {name, class},\r\n      ]\r\n     */\r\n    const groups: any[] = [];\r\n    const mainGroupArrayCache = {};\r\n    const simpleCache = {};\r\n\r\n    for (const descriptor of columnConfigs) {\r\n      const hasDescriptorsProp = propToGroupIndexMap.hasOwnProperty(descriptor.prop);\r\n      const objectToAdd = {name: descriptor.name || '', class: descriptor.headerClass || ''};\r\n      if (hasDescriptorsProp) {\r\n        const simplePath = propToGroupIndexMap[descriptor.prop];\r\n        const isSubgroup = simplePath.indexOf('.') >= 0;\r\n\r\n        const path: string = getPath(propToGroupIndexMap[descriptor.prop]);\r\n\r\n        const cache = mainGroupArrayCache;\r\n        let cachedArray = cache[path];\r\n        if (!cachedArray) {\r\n          cachedArray = [];\r\n          cachedArray.push(path);\r\n          cachedArray.unshift(objectToAdd);\r\n          cache[path] = cachedArray;\r\n          simpleCache[simplePath] = cachedArray;\r\n\r\n          if (!isSubgroup) {\r\n            groups.push(cachedArray);\r\n          } else {\r\n            const parentProp = simplePath.substr(0, simplePath.lastIndexOf('.'));\r\n            const arr = get(simpleCache, parentProp) as any[];\r\n\r\n            if (arr) { // fix an edge case where there is no parent props\r\n              insertAt(arr, arr.length - 1, cachedArray);\r\n            } else {\r\n              const realPath = getPath(parentProp);\r\n              const newArray = [];\r\n              newArray.push(realPath);\r\n              insertAt(newArray, newArray.length - 1, cachedArray);\r\n              cache[realPath] = newArray;\r\n              simpleCache[parentProp] = newArray;\r\n              groups.push(newArray);\r\n            }\r\n          }\r\n\r\n        } else {\r\n          insertAt(cachedArray, cachedArray.length - 1, objectToAdd);\r\n        }\r\n      } else {\r\n        groups.push(objectToAdd);\r\n      }\r\n    }\r\n\r\n    // makes groups be a candidate for recursive call\r\n    groups.push('$$root');\r\n\r\n    const depth = getDepth(groups);\r\n\r\n    const groupTuple = emptyArrays(depth);\r\n    let deepLevel = -1;\r\n    const traverseGroups = (_groups: any[]) => {\r\n      deepLevel++;\r\n      const groupPath = last(_groups);\r\n\r\n      const theGroup = get(colGroups, groupPath);\r\n      if (theGroup) {\r\n        const propsLength = theGroup.subGroups\r\n          ? totalSubGroupProps(theGroup.subGroups) + theGroup.props.length\r\n          : theGroup.props.length;\r\n        const groupName = this.domSanitizer.bypassSecurityTrustHtml(theGroup.groupName);\r\n        groupTuple[deepLevel - 1].push([groupName, theGroup.groupClass || '', 1, propsLength]);\r\n        pushEmptyArrays(groupTuple[deepLevel - 1], propsLength - 1);\r\n      }\r\n      _groups.forEach((group) => {\r\n        const isObject = !Array.isArray(group);\r\n        if (isObject) {\r\n          if (typeof group !== 'string') {\r\n            groupTuple[deepLevel].push([this.domSanitizer.bypassSecurityTrustHtml(group.name), group.class, depth - deepLevel, 1]);\r\n            for (let i = 1; i < depth - deepLevel; i++) {\r\n              groupTuple[deepLevel + i].push([]);\r\n            }\r\n          }\r\n        } else {\r\n          traverseGroups(group);\r\n        }\r\n      });\r\n      deepLevel--;\r\n    };\r\n\r\n    traverseGroups(groups);\r\n\r\n    if (this.withIndex) {\r\n      groupTuple.forEach((group, index) => {\r\n        const toPrepend = index === 0\r\n          ? [this.indexName, this.indexClass, depth, 1]\r\n          : [];\r\n        group.unshift(toPrepend);\r\n      });\r\n    }\r\n\r\n    if (this.withActions && this.actions.length > 0) {\r\n      groupTuple.forEach((group, index) => {\r\n        const toPrepend = this.actions.map(action => {\r\n           if (index === 0) {\r\n             return [action.name, action.class || '', depth, 1];\r\n           }\r\n           return [];\r\n         }\r\n        );\r\n        group.push(...toPrepend);\r\n      });\r\n    }\r\n\r\n    return groupTuple;\r\n  }\r\n\r\n  private buildSubHeaders () {\r\n    const descriptors = this.configurations.states.columns;\r\n    let subHeaders = descriptors.map(descriptor => ({\r\n      name: descriptor.subHeader || '',\r\n      class: descriptor.subHeaderClass || ''\r\n    }));\r\n\r\n    if (this.withActions) {\r\n      subHeaders = subHeaders.concat(this.actions.map(action => ({\r\n        name: action.subHeader || '',\r\n        class: action.subHeaderClass || ''\r\n      })));\r\n    }\r\n\r\n    return subHeaders;\r\n  }\r\n\r\n  private watchConfigsChanges() {\r\n    (this.configurations as any)['_changeObs'].pipe(filter(t => t === 'header')).subscribe(() => {\r\n      this.headers = this.buildHeaders();\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- START INDEX -->\r\n<td [class]=\"configs.states.index.class\" *ngIf=\"state.showIndex\">\r\n  {{\r\n  getRowIndex(rowIndex, group ? {\r\n    parentIndex: groupIndex,\r\n    parentText: group.indexFn(groupIndex, { parentIndex: parentIndex, parentText: parentText })\r\n  } : null)\r\n  }}\r\n</td>\r\n<!-- END INDEX -->\r\n\r\n<!-- START DATA -->\r\n<td *ngFor=\"let data of row; let colIndex = index; trackBy: trackByIndex\"\r\n    table-cell\r\n    [readonly]=\"configs.states.editing.enabled ? !isEditing : true\"\r\n    [column]=\"colIndex\"\r\n    [row]=\"rowIndex\"\r\n    [group]=\"group\"\r\n    [columnWord]=\"words[colIndex]\"\r\n    [wordAddress]=\"words[colIndex] + '.' + rowIndex\"\r\n    [columnConfigs]=\"configs.states.columns[colIndex]\"\r\n></td>\r\n<!-- END DATA -->\r\n\r\n<!-- START ACTIONS -->\r\n<ng-container *ngFor=\"let _ of configs.states.actions; let i = index\">\r\n  <td *ngIf=\"state.showActions\" [class]=\"configs.states.actions[i].class\">\r\n    <ng-container *ngFor=\"let action of getActions(i, rowIndex, group); let actionIndex = index\">\r\n      <i class=\"{{ configs.states.actions[i].types[action].icon }} cursor-pointer icon icon-{{ action }} {{ actionIndex > 0 ? 'ml-2' : '' }}\"\r\n         (click.out-zone)=\"onActionClicked(i, action, rowIndex, group)\"\r\n         data-placement=\"bottom\"\r\n         data-toggle=\"tooltip\"\r\n         stopPropagation\r\n         title=\"{{ configs.states.actions[i].types[action].name }}\">\r\n      </i>\r\n    </ng-container>\r\n  </td>\r\n</ng-container>\r\n<!-- END ACTIONS -->\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { difference } from 'lodash';\r\nimport { TableDataService } from '../data/table-data.service';\r\nimport { romanize } from '../data/table-data.utils';\r\nimport { NgTableState } from '@app/table/core/ng-table-state.service';\r\n\r\n@Component({\r\n  selector: 'tr[table-row]',\r\n  templateUrl: './table-row.component.html',\r\n  styleUrls: ['./table-row.component.scss']\r\n})\r\nexport class TableRowComponent implements OnInit {\r\n\r\n  @Input() isEditing: boolean;\r\n\r\n  @Input() row;\r\n  @Input() rowIndex;\r\n  @Input() groupIndex;\r\n  @Input() group;\r\n  @Input() parentIndex;\r\n  @Input() parentText;\r\n\r\n  public readonly words = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',\r\n    'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n  constructor (private _dataService: TableDataService,\r\n               public state: NgTableState,\r\n  ) {}\r\n\r\n  ngOnInit () {\r\n  }\r\n\r\n  get configs () {\r\n    return this.state.configurations;\r\n  }\r\n\r\n  get data () {\r\n    return this.state.data;\r\n  }\r\n\r\n  trackByIndex (index) {\r\n    return index;\r\n  }\r\n\r\n  getRowIndex(currentIndex, parent: any = {}) {\r\n    const indexConfigs = this.state.configurations.states.index;\r\n    const paging = this.state.configurations.states.paging;\r\n\r\n    const index = paging.enabled ? (paging.pageNumber - 1) * paging.pageSize + currentIndex : currentIndex;\r\n\r\n    if (indexConfigs.rowIndexPattern) {\r\n      return indexConfigs.rowIndexPattern(index, parent);\r\n    }\r\n\r\n    if (indexConfigs.rowIndexType === 'romanNumeral') {\r\n      return romanize(index);\r\n    }\r\n\r\n    return index + 1;\r\n  }\r\n\r\n  onActionClicked (index, actionType, rowIndex, group) {\r\n    if (!this.configs.states.actions[index].clicked) {\r\n      return;\r\n    }\r\n\r\n    this.configs.states.actions[index].clicked({\r\n      type: actionType,\r\n      row: this._dataService.getRow(rowIndex, group),\r\n      rowIndex: rowIndex,\r\n      tableData: this.data,\r\n      ...group ? { group } : {},\r\n    });\r\n  }\r\n\r\n  getActions(index, rowIndex, group?) {\r\n    const actionConfigs = this.configs.states.actions[index];\r\n    const actionsOnRow = actionConfigs.actionsOnRow;\r\n    const hiddenActions = this.configs.hiddenActions.get(actionConfigs) || [];\r\n\r\n    if (actionsOnRow && typeof actionsOnRow === 'function') {\r\n      const rowData = this._dataService.getRow(rowIndex, group);\r\n      const actions = actionsOnRow({\r\n        row: rowData,\r\n        types: actionConfigs.types,\r\n      });\r\n\r\n      return difference(actions, hiddenActions);\r\n    }\r\n\r\n    // TODO: implement this\r\n    return difference(actionConfigs.static, hiddenActions);\r\n  }\r\n\r\n}\r\n","// See: https://gist.github.com/hapticdata/08c9d7f9e18e2ab72e715264c251f46e\r\nimport { TableColumnGroupsConfiguration } from './table.models';\r\n\r\nfunction maxDepth (a) {\r\n  let maxVal = Number.MIN_VALUE;\r\n  let item;\r\n\r\n  a.forEach(val => {\r\n    let _depth = depth(val);\r\n    if (_depth > maxVal) {\r\n      maxVal = _depth;\r\n      item = val;\r\n    }\r\n  });\r\n\r\n  return item;\r\n}\r\n\r\nexport function depth (a, count = 0) {\r\n  return Array.isArray(a) ? depth(maxDepth(a), count + 1) : count;\r\n}\r\n\r\n// This method modify object\r\n// If shallowClone = true then it will not\r\nexport function insertAt <T> (array: T[], index: number, data: T, shallowClone = false) {\r\n  if (shallowClone) {\r\n    array = [...array];\r\n  }\r\n\r\n  array.splice(index, 0, data);\r\n  return array;\r\n}\r\n\r\nexport function emptyArrays (number: number) {\r\n  const array = [];\r\n  for (let i = 0; i < number; i++) {\r\n    array.push([]);\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function pushEmptyArrays (targetArray, number: number) {\r\n  for (let i = 0; i < number; i++) {\r\n    targetArray.push([]);\r\n  }\r\n  return targetArray;\r\n}\r\n\r\nexport function buildPropToPathMap (colGroups: TableColumnGroupsConfiguration[]) {\r\n  const obj = {};\r\n  const indexStack = [];\r\n  const makeObject = (_groups) => {\r\n    _groups.forEach((group, index) => {\r\n      indexStack.push(index);\r\n      group.props.forEach(p => {\r\n        obj[p] = `${indexStack.join('.')}`;\r\n      });\r\n      if (group.subGroups && group.subGroups.length > 0) {\r\n        makeObject(group.subGroups);\r\n      }\r\n      indexStack.pop();\r\n    });\r\n  };\r\n  makeObject(colGroups);\r\n  return obj;\r\n}\r\n\r\nexport function totalSubGroupProps(colGroups: TableColumnGroupsConfiguration[]) {\r\n  let total = 0;\r\n  const countProps = (gr) => {\r\n    gr.forEach(g => {\r\n      total += (g.props || []).length;\r\n      if (g.subGroups && g.subGroups.length) {\r\n        countProps(g.subGroups);\r\n      }\r\n    });\r\n  };\r\n  countProps(colGroups);\r\n  return total;\r\n}\r\n\r\nexport function getPath (simplePath: string | null | undefined) {\r\n  if (!simplePath) {\r\n    return simplePath;\r\n  }\r\n\r\n  if (simplePath.indexOf('.') < 0) {\r\n    return `[${simplePath}]`;\r\n  }\r\n\r\n  return simplePath.split('.').map(i => `[${i}]`).join('.subGroups');\r\n}\r\n","export * from './public-api';\r\n","<ng-template #content>\r\n  <div class=\"{{ class }} table-responsive\">\r\n    <table class=\"table table-bordered\">\r\n      <thead table-header></thead>\r\n      <!-- SIMPLE ROWS-->\r\n      <ng-container *ngIf=\"tableDataInternal.isSimple\">\r\n        <tbody class=\"ng-table-body\">\r\n          <ng-container *ngFor=\"let row of tableDataInternal.data; let rowIndex = index; trackBy: trackByIndex\">\r\n            <tr table-row\r\n                [isEditing]=\"isEditing\"\r\n                [row]=\"row\"\r\n                [rowIndex]=\"rowIndex\"\r\n            ></tr>\r\n          </ng-container>\r\n          <tr class=\"ng-table-adding-row\"\r\n              adding-row\r\n              [configs]=\"configs\"\r\n              [data]=\"data\"\r\n              *ngIf=\"configs.editing.enabled && configs.editing.allowAdding && isEditing\">\r\n          </tr>\r\n        </tbody>\r\n      </ng-container>\r\n      <!-- END SIMPLE ROWS-->\r\n\r\n      <!-- GROUP ROWS -->\r\n      <ng-container *ngIf=\"tableDataInternal.isGroup\">\r\n        <ng-container *ngTemplateOutlet=\"groupTemplate; context: { groups: tableDataInternal.groupData }\"></ng-container>\r\n      </ng-container>\r\n      <!-- END GROUP ROWS -->\r\n    </table>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngTemplateOutlet=\"wrapper, context: { content: content }\"></div>\r\n\r\n<!-- GROUP TEMPLATE -->\r\n<ng-template #groupTemplate let-groups=\"groups\" let-parentIndex=\"parentIndex\" let-parentText=\"parentText\">\r\n  <ng-container *ngFor=\"let group of groups; let groupIndex = index\">\r\n\r\n    <ng-container *ngIf=\"group.groupIndex === 0\">\r\n      <tbody class=\"ng-table-body ng-table-group ng-table-group-{{groupIndex}}\">\r\n      <ng-container *ngTemplateOutlet=\"groupContentTemplate;\r\n      context: { group: group, groupIndex: groupIndex, parentIndex: parentIndex, parentText: parentText }\">\r\n      </ng-container>\r\n      </tbody>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"group.groupIndex != 0\">\r\n      <ng-container *ngTemplateOutlet=\"groupContentTemplate;\r\n      context: { group: group, groupIndex: groupIndex, parentIndex: parentIndex, parentText: parentText }\">\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n<!-- END GROUP TEMPLATE -->\r\n\r\n<ng-template #groupContentTemplate\r\n             let-group=\"group\"\r\n             let-groupIndex=\"groupIndex\"\r\n             let-parentIndex=\"parentIndex\"\r\n             let-parentText=\"parentText\">\r\n  <!-- GROUP HEADER RENDERING -->\r\n  <tr table-group-header\r\n      [group]=\"group\"\r\n      [groupIndex]=\"groupIndex\"\r\n      [parentIndex]=\"parentIndex\"\r\n      [parentText]=\"parentText\">\r\n  </tr>\r\n  <!-- END GROUP HEADER RENDERING -->\r\n\r\n  <!-- DATA RENDERING -->\r\n  <ng-container *ngIf=\"group.data\">\r\n    <ng-container *ngFor=\"let row of group.data; let rowIndex = index; trackBy: trackByIndex\">\r\n      <tr table-row *ngIf=\"couldRenderRow(row)\"\r\n          [isEditing]=\"isEditing\"\r\n          [row]=\"row\"\r\n          [rowIndex]=\"rowIndex\"\r\n          [group]=\"group\"\r\n          [groupIndex]=\"groupIndex\"\r\n          [parentIndex]=\"parentIndex\"\r\n          [parentText]=\"parentText\"\r\n      ></tr>\r\n    </ng-container>\r\n  </ng-container>\r\n  <!-- END DATA RENDERING -->\r\n\r\n  <!-- RECURSIVE -->\r\n  <ng-container *ngIf=\"group.subGroups\">\r\n    <ng-container *ngTemplateOutlet=\"groupTemplate; context: {\r\n        groups: group.subGroups,\r\n        parentIndex: groupIndex,\r\n        parentText: group.indexFn(groupIndex, { parentIndex: parentIndex, parentText: parentText })\r\n      }\"></ng-container>\r\n  </ng-container>\r\n  <!-- END RECURSIVE -->\r\n</ng-template>\r\n\r\n<ng-template #wrapper let-content=\"content\">\r\n  <ng-container *ngIf=\"configs.paging.enabled\">\r\n    <pageable>\r\n      <table-metadata *ngIf=\"configs.paging.metadata\"\r\n                      [totalItems]=\"configs.paging.totalRecords\"\r\n                      [pageSize]=\"configs.paging.pageSize\"\r\n                      (totalRecords)=\"onTotalRecordsChanged($event)\"\r\n      ></table-metadata>\r\n\r\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\r\n\r\n      <table-pagination (page)=\"onPageChanged($event)\"\r\n                        [pageNumber]=\"configs.paging.pageNumber\"></table-pagination>\r\n    </pageable>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!configs.paging.enabled\">\r\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { TableConfigurations } from './core/table-configurations';\r\nimport { TableDataService } from './core/data/table-data.service';\r\nimport { CellManager } from './core/table-cell/cell-manager.service';\r\nimport { CellService } from './core/table-cell/cell.service';\r\nimport { TableData } from './core/table-data';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormMode } from 'src/app/core/interfaces/app/form-mode';\r\nimport { untilDestroyed } from 'ngx-take-until-destroy';\r\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\r\nimport { CellData } from './core/data/table-data-internal';\r\nimport { AddingCellService } from './core/table-cell-for-adding/adding-cell.service';\r\nimport { AddingDataService } from './core/table-cell-for-adding/adding-data.service';\r\nimport { NgTableState } from '@app/table/core/ng-table-state.service';\r\n\r\n@Component({\r\n  selector: 'ng-table',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './ng-table.component.html',\r\n  styleUrls: ['./ng-table.component.scss'],\r\n  providers: [\r\n    CellService,\r\n    CellManager,\r\n    AddingCellService,\r\n    AddingDataService,\r\n    NgTableState,\r\n    {\r\n      provide: TableDataService,\r\n      useClass: TableDataService,\r\n      deps: [CellManager, ChangeDetectorRef]\r\n    }\r\n  ]\r\n})\r\nexport class NgTableComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  @HostBinding('class') hostClass = 'ng-table';\r\n\r\n  @Input() class = 'table-responsive';\r\n  @Input() configurations: TableConfigurations;\r\n\r\n  @Input()\r\n  get data (): TableData {\r\n    return this._data;\r\n  }\r\n\r\n  set data (value: TableData) {\r\n    this._data = value || new TableData();\r\n    this.patchTableData(this._data);\r\n    this._dataService.setTableData(this.configurations, this._data);\r\n    this._state.data = this._data;\r\n  }\r\n\r\n  public isEditing = false;\r\n\r\n  private _data: TableData;\r\n\r\n  constructor (private _cd: ChangeDetectorRef,\r\n               private _dataService: TableDataService,\r\n               private _elementRef: ElementRef,\r\n               private _cellService: CellService,\r\n               private _addingCellService: AddingCellService,\r\n               private _addingDataService: AddingDataService,\r\n               private _ngZone: NgZone,\r\n               private _route: ActivatedRoute,\r\n               private _state: NgTableState,\r\n  ) {}\r\n\r\n  ngOnInit () {\r\n    this._state.configurations = this.configurations;\r\n\r\n    this.isEditing = this.configs.editing.enabled;\r\n\r\n    this.patchConfigs();\r\n    this.deActiveCellOnClickedOutside();\r\n    this.watchFormModeChanges();\r\n  }\r\n\r\n  ngOnDestroy (): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      document.removeEventListener('click', this.deActiveCellOnClickedOutside['listener']);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit (): void {\r\n  }\r\n\r\n  trackByIndex (index) {\r\n    return index;\r\n  }\r\n\r\n  couldRenderRow (row: CellData[]) {\r\n    for (let i = 0; i < row.length; i++) {\r\n      const data = row[i].value;\r\n      const config = this.configs.columns[i];\r\n\r\n      if (Object.prototype.hasOwnProperty.call(config, ['hideRowOn'])) {\r\n        let dataToCompare;\r\n        if (typeof config.hideRowOn === 'function') {\r\n          return !config.hideRowOn(data);\r\n        } else {\r\n          dataToCompare = config.hideRowOn;\r\n        }\r\n\r\n        if (data === dataToCompare) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  onPageChanged (page: any) {\r\n    if (!this.configs.paging.enabled) {\r\n      return;\r\n    }\r\n\r\n    this.configs.paging.pageNumber = page.pageNumber;\r\n    this.configs.paging.pageSize = page.pageSize;\r\n\r\n    this.configs.paging.onPageChanged(page);\r\n  }\r\n\r\n  onTotalRecordsChanged (totalRecords: number) {\r\n    if (!this.configs.paging.enabled) {\r\n      return;\r\n    }\r\n\r\n    this.configs.paging.totalRecords = totalRecords;\r\n  }\r\n\r\n  get tableDataInternal() {\r\n    return this._dataService.tableDataInternal;\r\n  }\r\n\r\n  get configs() {\r\n    return this.configurations.states;\r\n  }\r\n\r\n  private deActiveCellOnClickedOutside() {\r\n    const eventListener = this.deActiveCellOnClickedOutside['listener'] = event => {\r\n      const $tableBodies: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll('.ng-table-body'));\r\n      if ($tableBodies && !$tableBodies.some(e => e.contains(event.target))) {\r\n        // this._cellService.setActive(null);\r\n        // this._addingCellService.setActive(null);\r\n      }\r\n    };\r\n\r\n    this._ngZone.runOutsideAngular(() => document.addEventListener('click', eventListener));\r\n  }\r\n\r\n  private watchFormModeChanges() {\r\n    if (!this._route.parent || !this._route.parent.snapshot.params.mode) {\r\n      return;\r\n    }\r\n\r\n    this._route.parent.params.pipe(\r\n      untilDestroyed(this),\r\n      pluck<any, string>('mode'),\r\n      distinctUntilChanged()\r\n    ).subscribe(mode => {\r\n      this.isEditing = mode === FormMode.Edit;\r\n    });\r\n  }\r\n\r\n  private patchConfigs () {\r\n    const configs: any = this.configurations;\r\n    configs['_cd'] = this._cd;\r\n  }\r\n\r\n  private patchTableData(data: TableData) {\r\n    data['_dataService'] = this._dataService;\r\n    data['_configs'] = this.configurations;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormContainerModule } from '../common-input/form-container.module';\r\nimport { NgTableComponent } from './ng-table.component';\r\nimport { DateToStringPipe, StringToDatePipe } from './core/pipes/date-pipes';\r\nimport { VndCurrencyPipe } from './core/pipes/vnd-currency.pipe';\r\nimport { PrependZeroPipe } from './core/pipes/prepend-zero.pipe';\r\nimport { TableCellComponent } from './core/table-cell/table-cell.component';\r\nimport { StopPropagationDirective } from './stop-propagation.directive';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TableHeaderComponent } from './core/table-header/table-header.component';\r\nimport { TableCellForAddingComponent } from './core/table-cell-for-adding/table-cell-for-adding.component';\r\nimport { AddingRowComponent } from './core/adding-row/adding-row.component';\r\nimport { PaginatorModule } from '../paginator/paginator.module';\r\nimport { TableRowComponent } from './core/table-row/table-row.component';\r\nimport { DataOnlyCellComponent } from './core/cells/data-only-cell/data-only-cell.component';\r\nimport { TableGroupHeaderComponent } from './core/table-group-header/table-group-header.component';\r\n\r\nconst PIPES = [\r\n  DateToStringPipe,\r\n  StringToDatePipe,\r\n  VndCurrencyPipe,\r\n  PrependZeroPipe,\r\n];\r\n\r\nconst DIRECTIVES = [\r\n  StopPropagationDirective,\r\n];\r\n\r\nconst TABLE_CORE = [\r\n  TableCellComponent,\r\n  TableCellForAddingComponent,\r\n  AddingRowComponent,\r\n  TableHeaderComponent,\r\n];\r\n\r\nconst TABLE_IMPLEMENTS = [\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgTableComponent,\r\n    ...TABLE_CORE,\r\n    ...TABLE_IMPLEMENTS,\r\n    ...PIPES,\r\n    ...DIRECTIVES,\r\n    TableRowComponent,\r\n    DataOnlyCellComponent,\r\n    TableGroupHeaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormContainerModule,\r\n    PaginatorModule,\r\n  ],\r\n  exports: [\r\n    NgTableComponent,\r\n  ]\r\n})\r\nexport class NgTableModule {}\r\n","export * from './ng-table.module';\r\n\r\nexport * from './core/table.models';\r\n\r\nexport { TableData } from './core/table-data';\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[stopPropagation]'\r\n})\r\nexport class StopPropagationDirective {\r\n\r\n  constructor () { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  click (event: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}